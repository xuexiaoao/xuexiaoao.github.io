{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/google0b5db2b706b5a225.html","path":"google0b5db2b706b5a225.html","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"63b867db89b4ae930ae29c482bee174e91714171","modified":1517288589000},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1515511069833},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1515511069832},{"_id":"source/google0b5db2b706b5a225.html","hash":"294c8097532d29b4ab6608f37647c8c2035cf013","modified":1516543820978},{"_id":"source/robots.txt","hash":"bb872906c8f61ed54c8d48ccda05fd1aa307d473","modified":1516545427016},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1515511069834},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1515511069841},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1515511069842},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1515511069843},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1515511069844},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1515511069845},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1515511069846},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1515511069848},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1515511069854},{"_id":"themes/next/README.md","hash":"927f82cfeb5969a89b815b5ec3a3f2881e3b1bb4","modified":1515511069851},{"_id":"themes/next/README.cn.md","hash":"87950c415dd162ff78e98b41f1148b85462103e2","modified":1515511069850},{"_id":"themes/next/_config.yml","hash":"0e04234850ef49479587dabbc4d7bfe64c90e6cf","modified":1516543452627},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1515511069856},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1515511069983},{"_id":"source/.github/ISSUE_TEMPLATE.md","hash":"7ed6b236cc881155cbfeee98b413bdb339fc70e5","modified":1517229289882},{"_id":"source/_posts/2017-final-summary-and-plan.md","hash":"416ebd15b03c8c19fec39a3ec2213493dfcdde49","modified":1515513263940},{"_id":"source/_posts/continuous-optimization-hexo.md","hash":"02242edc84639f7a062b18ba572e968d59843f31","modified":1516549670352},{"_id":"source/_posts/create-personal-reading-tracking-system.md","hash":"ab51730d072f5e7eb1f0ef215a766ad4748315a8","modified":1516549672316},{"_id":"source/categories/index.md","hash":"d5d15586683d524c994db098277f580698ed7b97","modified":1515773618238},{"_id":"source/_posts/monotasking-after-reading.md","hash":"e254834f0f905a9adfa98ab7565ecc6effaf3b5d","modified":1517153243540},{"_id":"source/tags/index.md","hash":"59ecf8e1779c42d34e20e724ec3fbcac4789b40f","modified":1515773623487},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1515511069836},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"c6969e9c2ef71a27573970f9eab63d03ad14125e","modified":1515514319206},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1515511069801},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1515511069813},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1515511069838},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"b1ec000babd42bb7ffd26f5ad8aac9b5bec79ae5","modified":1515511069837},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1515511051359},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1515511069840},{"_id":"themes/next/.git/index","hash":"7cb00ef8ae6d5b71b798d2c8131140fa35f773cd","modified":1516202483739},{"_id":"themes/next/.git/packed-refs","hash":"339779e225d913a344c5e6210617badd049c4434","modified":1515511069789},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1515511069858},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1515511069859},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1515511069862},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1515511069860},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1515511069864},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1515511069865},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1515511069863},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1515511069868},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1515511069871},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1515511069874},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1515511069872},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1515511069878},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1515511069873},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1515511069876},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1515511069877},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1515511069879},{"_id":"themes/next/layout/_layout.swig","hash":"84fd0fc889ba7d0250c40da7dbbecf692974635f","modified":1516377273063},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1515511069976},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1515511069976},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1515511069978},{"_id":"themes/next/layout/gitter.swig","hash":"8f38fdc89bcf2e9befd9d81519553d1b6d437e0c","modified":1516375507552},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1515511069979},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1515511069986},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1515511069987},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1515511069981},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1515511069980},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1515511069982},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1515511070341},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1515511070342},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1515511070343},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070146},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1515511051361},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1515511051366},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1515511051365},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1515511051375},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1515511051363},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1515511051381},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1515511051373},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1515511051371},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1515511051368},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1515511051377},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1515511051379},{"_id":"themes/next/.git/logs/HEAD","hash":"015d02f30436c19bdb7fe0765253681fc816413b","modified":1515514319216},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1515511069888},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1515511069887},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1515511069894},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1515511069892},{"_id":"themes/next/layout/_macro/post.swig","hash":"e06d53c8c6876e7b11e906af0b307c603180d50e","modified":1516540932274},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1515511069890},{"_id":"themes/next/layout/_partials/footer.swig","hash":"26e93336dc57a39590ba8dc80564a1d2ad5ff93b","modified":1515511069896},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1515511069891},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1515511069903},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1516202801267},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1515511069905},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1515511069906},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1515511069918},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1515511069907},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1515511069919},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1515511069927},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1515511069958},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1515511069959},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1515511069960},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1515511069962},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1515511069961},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1515511069965},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1515511069882},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1515511069963},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1515511069884},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1515511069989},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1515511069991},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1515511069992},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1515511069994},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1515511069995},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1515511069993},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1515511069996},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1515511069998},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1515511069997},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1515511070147},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1515511070149},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1515511070144},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1515511070150},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1515511070151},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1515511070153},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1515511070154},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1515511070155},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1515511070159},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1515511070156},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515511070160},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1515511070162},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1515511070158},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1515511070157},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1515511070159},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1515511070161},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1515511070164},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1515511070163},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1515511070165},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511069923},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511069925},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070101},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070102},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070105},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070140},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1515511070143},{"_id":"themes/next/.git/objects/ed/16a25793b9be4f11a95cdccf18aa17b77b8c0e","hash":"a1cf9c7922f66fea5947865b25b053a5ded34450","modified":1515514319209},{"_id":"themes/next/.git/refs/heads/master","hash":"56cd40ef18b22ae112e9a56e8a03b3cbe3a79851","modified":1515514319216},{"_id":"themes/next/.git/objects/73/e643c7ebb44243dd1f58229dd704044839bd38","hash":"673dfbca680a70b647b30e04381dcf698dbf7012","modified":1515514319197},{"_id":"themes/next/.git/objects/b6/beee6372f390afabf68595d9874f9f5c1dff2f","hash":"def5075861d1c4a20112b21650ecb06c93fc39fb","modified":1515514297827},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1515511069900},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1515511069902},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1515511069910},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1515511069909},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1515511069911},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1515511069912},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1515511069921},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1515511069923},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1515511069916},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1515511069915},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1515511069914},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1515511069926},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1515511069930},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1515511069933},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1515511069935},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1515511069936},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1515511069931},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1515511069934},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1515511069938},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1515511069939},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1515511069940},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1515511069944},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1515511069942},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1515511069945},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1515511069941},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1515511069948},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1515511069947},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1515511069953},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1515511069949},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1515511069951},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1515511069952},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1515511069954},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1515511069955},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1515511069957},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1515511069975},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1515511069970},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1515511069971},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1515511069973},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1515511070100},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1515511070103},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1515511070104},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1515511070139},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1515511070141},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1515511070143},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"f281370548c4d742d4bfb2d017719a5e1d4aa07a","modified":1516374458798},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1515511070137},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1515511070168},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1515511070167},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1515511070170},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1515511070169},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1515511070174},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1515511070172},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1515511070171},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1515511070175},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1515511070177},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1515511070178},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1515511070197},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1515511070204},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1515511070209},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1515511070210},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1515511070207},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1516202801279},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1515511070232},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1515511070236},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1515511070235},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1515511070242},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1515511070234},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1515511070243},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1515511070245},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1515511070246},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1515511070241},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1515511070276},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1515511070287},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1515511070280},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1515511070281},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1515511070284},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1515511070288},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1515511070290},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1515511070297},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1515511070299},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1515511070300},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1515511070302},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1515511070303},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1515511070307},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1515511070306},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1515511070304},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1515511070305},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1515511070308},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1515511070313},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1515511070312},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1515511070310},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1515511070314},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1515511070292},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"254fe7aa82e85bc37844f0f550d286d9c7a45251","modified":1516535617123},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1515511070294},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1515511070318},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1515511070317},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1515511070319},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1515511070331},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1515511070332},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1515511070338},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1515511070336},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1515511070338},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1515511070278},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"015d02f30436c19bdb7fe0765253681fc816413b","modified":1515514319216},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1515511069799},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1515511069968},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1515511069970},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1515511070007},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1515511070004},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1515511070008},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1515511070009},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1515511070006},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1515511070030},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1515511070062},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1515511070093},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1515511070091},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1515511070095},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1515511070094},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1515511070096},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1515511070110},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1515511070089},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1515511070112},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1515511070097},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1515511070111},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1515511070114},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1515511070108},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1515511070116},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"9c99034f8e00d47e978b3959f51eb4a9ded0fcc8","modified":1515511070115},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1515511070122},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1515511070125},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1515511070123},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1515511070124},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1515511070116},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1515511070127},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1515511070130},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1515511070134},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1515511070131},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1515511070132},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1515511070136},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1515511070135},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1515511070176},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1515511070191},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1515511070213},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1515511070194},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1515511070195},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1515511070215},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1515511070214},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1515511070216},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1515511070218},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1515511070219},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1515511070228},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1515511070231},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1515511070229},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1515511070239},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1515511070238},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1515511070248},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1515511070250},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1515511070251},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1515511070329},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1515511070328},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1515511070193},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1515511070274},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1515511070272},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1515511070335},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"dcfb4ea7c54f9a49f697a740d49b0bb54dcbb06f","modified":1515511069799},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1515511070013},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1515511070014},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1515511070011},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1515511070020},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1515511070018},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1515511070017},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1515511070015},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1515511070024},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1515511070025},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1515511070021},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1515511070028},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1515511070022},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1515511070032},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1515511070026},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1515511070029},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1515511070036},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1515511070034},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1515511070038},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1515511070033},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1515511070043},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1515511070037},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1515511070040},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1515511070039},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1515511070044},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1515511070046},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1515511070041},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1515511070050},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1515511070052},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1515511070054},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1515511070047},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1515511070053},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1515511070045},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"89d6c3b697efc63de42afd2e89194b1be14152af","modified":1515511070048},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1515511070058},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1515511070051},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1515511070055},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1515511070056},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1515511070078},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1515511070079},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1515511070076},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1515511070059},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1515511070060},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1515511070082},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1515511070081},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1515511070084},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1515511070086},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1515511070080},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1515511070087},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1515511070065},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1515511070066},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1515511070085},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1515511070069},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1515511070064},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1515511070068},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1515511070074},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1515511070073},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1515511070071},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1515511070070},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1515511070120},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1515511070118},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1515511070128},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1515511070185},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1515511070184},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1515511070187},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1515511070186},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1515511070189},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1515511070221},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1515511070222},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1515511070225},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1515511070224},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1515511070226},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1515511070227},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1515511070256},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1515511070259},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1515511070270},{"_id":"themes/next/.git/objects/pack/pack-9314a8b35b209b23287a0cea4319dcd677a3fa24.idx","hash":"1a081670fb9ee8eff02cf0651b2736fd839c6542","modified":1515511069725},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1515511070202},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1515511070324},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1515511070266},{"_id":"themes/next/.git/objects/pack/pack-9314a8b35b209b23287a0cea4319dcd677a3fa24.pack","hash":"fe50a9325440d2b0f274cc695baa405ff3db5758","modified":1515511069733},{"_id":"public/atom.xml","hash":"66400ded0c4a79126af58edb69fe2cef3d9fbc15","modified":1517500100985},{"_id":"public/sitemap.xml","hash":"d3e6165d20d6fea70513da5d43947a0faf73cda0","modified":1517500100991},{"_id":"public/categories/index.html","hash":"233c9324a0c243c8c9e6d5879fd3844f34b28d5e","modified":1517500101175},{"_id":"public/tags/index.html","hash":"619dff63ab8be7281fbb4d35913ba062fe2b98fb","modified":1517500101176},{"_id":"public/2018/01/28/monotasking-after-reading/index.html","hash":"673e6452cab148328c9a8a8b67054ffa598e8284","modified":1517500101177},{"_id":"public/2018/01/15/continuous-optimization-hexo/index.html","hash":"ca7946c9921725616ead89fff966effa94ed5341","modified":1517500101177},{"_id":"public/2018/01/13/create-personal-reading-tracking-system/index.html","hash":"a7539ad338dcfde4a18e10352512ec7fb3d2a633","modified":1517500101177},{"_id":"public/2017/12/31/2017-final-summary-and-plan/index.html","hash":"29e67f8b21f822fd8b8db9caa2090fefda350512","modified":1517500101177},{"_id":"public/categories/Hexo/index.html","hash":"2ba17977f481702b5730d7d408d568d41280307c","modified":1517500101178},{"_id":"public/categories/生产力/index.html","hash":"f92a960a63059cf233e9cbf93272662fbe92ced9","modified":1517500101178},{"_id":"public/categories/读书笔记/index.html","hash":"f4860b998329cff9aab2af70c47091aaa8f5a1d9","modified":1517500101178},{"_id":"public/archives/index.html","hash":"74e272413b7e990c483f50a3b55cfb9326e5ed82","modified":1517500101178},{"_id":"public/archives/2017/index.html","hash":"427fe2be974547536f119ae920aa60a2306dfeb3","modified":1517500101178},{"_id":"public/archives/2017/12/index.html","hash":"d6ac858858a84194e794ab0c4c13242df1a557bc","modified":1517500101178},{"_id":"public/archives/2018/index.html","hash":"d77fa22221afd67925eeddbc003aa31bbc99d6f8","modified":1517500101178},{"_id":"public/archives/2018/01/index.html","hash":"efc7a025c7bad85e6d17415d1e6b6a57dca681a7","modified":1517500101179},{"_id":"public/index.html","hash":"60184443fe344224f4a6830576da732b6b22085e","modified":1517500101187},{"_id":"public/google0b5db2b706b5a225.html","hash":"294c8097532d29b4ab6608f37647c8c2035cf013","modified":1517500101187},{"_id":"public/robots.txt","hash":"bb872906c8f61ed54c8d48ccda05fd1aa307d473","modified":1517500101187},{"_id":"public/CNAME","hash":"63b867db89b4ae930ae29c482bee174e91714171","modified":1517500101188},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1517500101188},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1517500101188},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1517500101188},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1517500101188},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1517500101188},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1517500101188},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1517500101188},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1517500101188},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1517500101188},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517500101189},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1517500101189},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1517500101189},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1517500101189},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1517500101189},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1517500101189},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1517500101189},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1517500101189},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1517500101189},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1517500101190},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1517500101190},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1517500101190},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1517500101190},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1517500101190},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1517500101190},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1517500101190},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1517500101190},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1517500101190},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1517500101190},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1517500101190},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1517500101191},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1517500101191},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1517500101191},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1517500101191},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1517500102159},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1517500102165},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1517500102182},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1517500102184},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1517500102184},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1517500102185},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1517500102186},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1517500102186},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1517500102186},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1517500102186},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1517500102186},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1517500102186},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1517500102186},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1517500102186},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1517500102186},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1517500102186},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1517500102187},{"_id":"public/lib/fastclick/README.html","hash":"9568cf79596695c5e53affb7c4bfc1020a51dadc","modified":1517500102187},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1517500102187},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1517500102187},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"2b566eef185fa8feb1aa7341e3e60aa836645631","modified":1517500102187},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1517500102187},{"_id":"public/lib/jquery_lazyload/README.html","hash":"1444a6ac4d450075c9f1d19cf87f049605332674","modified":1517500102187},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1517500102187},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1517500102187},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1517500102188},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1517500102188},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1517500102188},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1517500102189},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1517500102189},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1517500102189},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1517500102189},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1517500102190},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1517500102190},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1517500102190},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1517500102190},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1517500102190},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1517500102190},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1517500102190},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1517500102190},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1517500102190},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1517500102190},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1517500102196},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1517500102197},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1517500102197},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1517500102197},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1517500102197},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1517500102197},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1517500102197},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1517500102198},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1517500102198},{"_id":"public/css/main.css","hash":"ef5ddb8191c6cc8921ec8936e62b834ce6b5bc65","modified":1517500102198},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1517500102198},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"3cc2c47956c9523bdf81d3255a572deb1327142f","modified":1517500102198},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1517500102198},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1517500102198},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1517500102198},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1517500102198},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1517500102199},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1517500102199},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1517500102199},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1517500102199},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1517500102199},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1517500102199},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1517500102199},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1517500102199},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1517500102200},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1517500102200},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1517500102200},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1517500102200},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1517500102200},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1517500102200},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1517500102201},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1517500102201},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1517500102202},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1517500102354}],"Category":[{"name":"Hexo","_id":"cjd4odl9u0005qswm2xy8m8ym"},{"name":"生产力","_id":"cjd4odl9z0007qswmhlbukz1o"},{"name":"读书笔记","_id":"cjd4odla10009qswmd0al6r5n"}],"Data":[],"Page":[{"title":"categories","date":"2018-01-12T16:06:37.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2018-01-13 00:06:37\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-01-12T16:13:38.238Z","path":"categories/index.html","layout":"page","_id":"cjd4odl9n0001qswmgue434vt","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-01-12T16:07:18.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2018-01-13 00:07:18\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-01-12T16:13:43.487Z","path":"tags/index.html","layout":"page","_id":"cjd4odl9q0003qswmsn9d657q","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"2017年度总结和计划","date":"2017-12-31T15:04:53.000Z","_content":"### 前言\n\n拖延症的我终于在2017年12月31日23：59写下了这篇文章。\n\n2017年过的很快，上半年忙忙碌碌的准备毕业顺带着找了几个星期的工作，最终选择了联通软件研究院，紧接着就来到了济南，一个遍地把子肉的泉城:sob:参加工作。来到公司后，遇到了对我敦敦教导的师傅、平易近人的老大还有一群友善的同事。在长达半年的试用期里，发现了自己非常非常多的不足，同时也接触到了以前没有机会接触的领域，谨以此篇文章总结我的2017，展望未来！\n\n### 回首六月\n\n最后一段学生生涯，有欢笑，也有离别，更多的是对未来的憧憬和害怕。憧憬进入互联网大佬的公司，走上人生巅峰，赢取白富美；害怕自己找不到一份好工作，害怕自己的技术能力止步不前，害怕自己得脊椎病，害怕自己加班过劳，不到30就秃顶:cry:。。。。\n\n回顾整个学生时代，感觉自己从来就没有真正努力的为某个目标而奋斗，也未曾给自己列过多么详细的计划（好吧，这是人生中第一篇年度总结）:drooling_face:。可以用一个字总结作为学生的我：懒。\n\n### 回首试用期\n\n不清楚公司是如何给员工分配部门的，稀里糊涂的来到的运维研发部门（或许和面试简历写的实习经历有关），最意外的是分配项目组后，竟然主要负责前端！前端！前端！，一个java:dog:竟然写前端，这和最初的憧憬可不一样！\n\n在前几个月的试用过度后，果然开始了react-native的技术调研和研发，整个试用期中，主要负责的就是跨平台技术的部分，因此接触的基本上都是之前未曾有过了解的领域。在调研和编码的过程中，逐步的发现了自己的各种问题，比如：\n\n* 看资料，查文档不仔细，经常会看了前半部分就不会再去看后半部分\n* 有想法，迟迟不去做，非得浪费没有必要浪费的时间\n* 有制定计划，却没有实施\n* 工作或学习中没有文档输出，也就是没有笔记\n\n6个月的试用期过的很快，这里面有遗憾也有兴奋，感觉这半年，技术能力其实并没有太多的增长，但是从师傅和网上大牛那学到了很多的思维方式，而这些思维也需要落实到实际行动中，这就是接下来的2018计划部分！\n\n### 展望2018\n\n2018，职场中最重要前3年的第一年，这么重要的一年，必须以最严格的方式约束自己，使自己有所成长！因此制定以下计划，并严格执行：\n\n* 每个月读一本书，并且有读书笔记\n* 每周写一篇技术博客并发布到github中\n* 每天晚上确保至少2个小时的学习时间\n* 做好文档输出工作，确保日后再有类似工作，一定会找到对应文档\n* 减肥，保证体重不会超过2017年\n* 学习实践GTD方法论，具备一定的时间管理分配能力，并实践到上面计划中","source":"_posts/2017-final-summary-and-plan.md","raw":"---\ntitle: 2017年度总结和计划\ndate: 2017-12-31 23:04:53\ntags:\n---\n### 前言\n\n拖延症的我终于在2017年12月31日23：59写下了这篇文章。\n\n2017年过的很快，上半年忙忙碌碌的准备毕业顺带着找了几个星期的工作，最终选择了联通软件研究院，紧接着就来到了济南，一个遍地把子肉的泉城:sob:参加工作。来到公司后，遇到了对我敦敦教导的师傅、平易近人的老大还有一群友善的同事。在长达半年的试用期里，发现了自己非常非常多的不足，同时也接触到了以前没有机会接触的领域，谨以此篇文章总结我的2017，展望未来！\n\n### 回首六月\n\n最后一段学生生涯，有欢笑，也有离别，更多的是对未来的憧憬和害怕。憧憬进入互联网大佬的公司，走上人生巅峰，赢取白富美；害怕自己找不到一份好工作，害怕自己的技术能力止步不前，害怕自己得脊椎病，害怕自己加班过劳，不到30就秃顶:cry:。。。。\n\n回顾整个学生时代，感觉自己从来就没有真正努力的为某个目标而奋斗，也未曾给自己列过多么详细的计划（好吧，这是人生中第一篇年度总结）:drooling_face:。可以用一个字总结作为学生的我：懒。\n\n### 回首试用期\n\n不清楚公司是如何给员工分配部门的，稀里糊涂的来到的运维研发部门（或许和面试简历写的实习经历有关），最意外的是分配项目组后，竟然主要负责前端！前端！前端！，一个java:dog:竟然写前端，这和最初的憧憬可不一样！\n\n在前几个月的试用过度后，果然开始了react-native的技术调研和研发，整个试用期中，主要负责的就是跨平台技术的部分，因此接触的基本上都是之前未曾有过了解的领域。在调研和编码的过程中，逐步的发现了自己的各种问题，比如：\n\n* 看资料，查文档不仔细，经常会看了前半部分就不会再去看后半部分\n* 有想法，迟迟不去做，非得浪费没有必要浪费的时间\n* 有制定计划，却没有实施\n* 工作或学习中没有文档输出，也就是没有笔记\n\n6个月的试用期过的很快，这里面有遗憾也有兴奋，感觉这半年，技术能力其实并没有太多的增长，但是从师傅和网上大牛那学到了很多的思维方式，而这些思维也需要落实到实际行动中，这就是接下来的2018计划部分！\n\n### 展望2018\n\n2018，职场中最重要前3年的第一年，这么重要的一年，必须以最严格的方式约束自己，使自己有所成长！因此制定以下计划，并严格执行：\n\n* 每个月读一本书，并且有读书笔记\n* 每周写一篇技术博客并发布到github中\n* 每天晚上确保至少2个小时的学习时间\n* 做好文档输出工作，确保日后再有类似工作，一定会找到对应文档\n* 减肥，保证体重不会超过2017年\n* 学习实践GTD方法论，具备一定的时间管理分配能力，并实践到上面计划中","slug":"2017-final-summary-and-plan","published":1,"updated":"2018-01-09T15:54:23.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd4odl9i0000qswmu5pbwh3x","content":"<h3 id=\"前言\"><a class=\"header-anchor\" href=\"#前言\"></a>前言</h3>\n<p>拖延症的我终于在2017年12月31日23：59写下了这篇文章。</p>\n<p>2017年过的很快，上半年忙忙碌碌的准备毕业顺带着找了几个星期的工作，最终选择了联通软件研究院，紧接着就来到了济南，一个遍地把子肉的泉城😭参加工作。来到公司后，遇到了对我敦敦教导的师傅、平易近人的老大还有一群友善的同事。在长达半年的试用期里，发现了自己非常非常多的不足，同时也接触到了以前没有机会接触的领域，谨以此篇文章总结我的2017，展望未来！</p>\n<h3 id=\"回首六月\"><a class=\"header-anchor\" href=\"#回首六月\"></a>回首六月</h3>\n<p>最后一段学生生涯，有欢笑，也有离别，更多的是对未来的憧憬和害怕。憧憬进入互联网大佬的公司，走上人生巅峰，赢取白富美；害怕自己找不到一份好工作，害怕自己的技术能力止步不前，害怕自己得脊椎病，害怕自己加班过劳，不到30就秃顶😢。。。。</p>\n<p>回顾整个学生时代，感觉自己从来就没有真正努力的为某个目标而奋斗，也未曾给自己列过多么详细的计划（好吧，这是人生中第一篇年度总结）🤤。可以用一个字总结作为学生的我：懒。</p>\n<h3 id=\"回首试用期\"><a class=\"header-anchor\" href=\"#回首试用期\"></a>回首试用期</h3>\n<p>不清楚公司是如何给员工分配部门的，稀里糊涂的来到的运维研发部门（或许和面试简历写的实习经历有关），最意外的是分配项目组后，竟然主要负责前端！前端！前端！，一个java🐶竟然写前端，这和最初的憧憬可不一样！</p>\n<p>在前几个月的试用过度后，果然开始了react-native的技术调研和研发，整个试用期中，主要负责的就是跨平台技术的部分，因此接触的基本上都是之前未曾有过了解的领域。在调研和编码的过程中，逐步的发现了自己的各种问题，比如：</p>\n<ul>\n<li>看资料，查文档不仔细，经常会看了前半部分就不会再去看后半部分</li>\n<li>有想法，迟迟不去做，非得浪费没有必要浪费的时间</li>\n<li>有制定计划，却没有实施</li>\n<li>工作或学习中没有文档输出，也就是没有笔记</li>\n</ul>\n<p>6个月的试用期过的很快，这里面有遗憾也有兴奋，感觉这半年，技术能力其实并没有太多的增长，但是从师傅和网上大牛那学到了很多的思维方式，而这些思维也需要落实到实际行动中，这就是接下来的2018计划部分！</p>\n<h3 id=\"展望2018\"><a class=\"header-anchor\" href=\"#展望2018\"></a>展望2018</h3>\n<p>2018，职场中最重要前3年的第一年，这么重要的一年，必须以最严格的方式约束自己，使自己有所成长！因此制定以下计划，并严格执行：</p>\n<ul>\n<li>每个月读一本书，并且有读书笔记</li>\n<li>每周写一篇技术博客并发布到github中</li>\n<li>每天晚上确保至少2个小时的学习时间</li>\n<li>做好文档输出工作，确保日后再有类似工作，一定会找到对应文档</li>\n<li>减肥，保证体重不会超过2017年</li>\n<li>学习实践GTD方法论，具备一定的时间管理分配能力，并实践到上面计划中</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a class=\"header-anchor\" href=\"#前言\"></a>前言</h3>\n<p>拖延症的我终于在2017年12月31日23：59写下了这篇文章。</p>\n<p>2017年过的很快，上半年忙忙碌碌的准备毕业顺带着找了几个星期的工作，最终选择了联通软件研究院，紧接着就来到了济南，一个遍地把子肉的泉城😭参加工作。来到公司后，遇到了对我敦敦教导的师傅、平易近人的老大还有一群友善的同事。在长达半年的试用期里，发现了自己非常非常多的不足，同时也接触到了以前没有机会接触的领域，谨以此篇文章总结我的2017，展望未来！</p>\n<h3 id=\"回首六月\"><a class=\"header-anchor\" href=\"#回首六月\"></a>回首六月</h3>\n<p>最后一段学生生涯，有欢笑，也有离别，更多的是对未来的憧憬和害怕。憧憬进入互联网大佬的公司，走上人生巅峰，赢取白富美；害怕自己找不到一份好工作，害怕自己的技术能力止步不前，害怕自己得脊椎病，害怕自己加班过劳，不到30就秃顶😢。。。。</p>\n<p>回顾整个学生时代，感觉自己从来就没有真正努力的为某个目标而奋斗，也未曾给自己列过多么详细的计划（好吧，这是人生中第一篇年度总结）🤤。可以用一个字总结作为学生的我：懒。</p>\n<h3 id=\"回首试用期\"><a class=\"header-anchor\" href=\"#回首试用期\"></a>回首试用期</h3>\n<p>不清楚公司是如何给员工分配部门的，稀里糊涂的来到的运维研发部门（或许和面试简历写的实习经历有关），最意外的是分配项目组后，竟然主要负责前端！前端！前端！，一个java🐶竟然写前端，这和最初的憧憬可不一样！</p>\n<p>在前几个月的试用过度后，果然开始了react-native的技术调研和研发，整个试用期中，主要负责的就是跨平台技术的部分，因此接触的基本上都是之前未曾有过了解的领域。在调研和编码的过程中，逐步的发现了自己的各种问题，比如：</p>\n<ul>\n<li>看资料，查文档不仔细，经常会看了前半部分就不会再去看后半部分</li>\n<li>有想法，迟迟不去做，非得浪费没有必要浪费的时间</li>\n<li>有制定计划，却没有实施</li>\n<li>工作或学习中没有文档输出，也就是没有笔记</li>\n</ul>\n<p>6个月的试用期过的很快，这里面有遗憾也有兴奋，感觉这半年，技术能力其实并没有太多的增长，但是从师傅和网上大牛那学到了很多的思维方式，而这些思维也需要落实到实际行动中，这就是接下来的2018计划部分！</p>\n<h3 id=\"展望2018\"><a class=\"header-anchor\" href=\"#展望2018\"></a>展望2018</h3>\n<p>2018，职场中最重要前3年的第一年，这么重要的一年，必须以最严格的方式约束自己，使自己有所成长！因此制定以下计划，并严格执行：</p>\n<ul>\n<li>每个月读一本书，并且有读书笔记</li>\n<li>每周写一篇技术博客并发布到github中</li>\n<li>每天晚上确保至少2个小时的学习时间</li>\n<li>做好文档输出工作，确保日后再有类似工作，一定会找到对应文档</li>\n<li>减肥，保证体重不会超过2017年</li>\n<li>学习实践GTD方法论，具备一定的时间管理分配能力，并实践到上面计划中</li>\n</ul>\n"},{"title":"持续优化Hexo","date":"2018-01-15T14:50:30.000Z","_content":"\n本文主要记录Hexo的优化历程，以备后面翻阅。\n\n## 添加emoji支持\n\n由于Hexo的Markdown语法并不支持emoji表情，所以只能通过第三方插件来实现此功能\n\n### 安装\n\n```shell\nnpm i hexo-renderer-markdown-it --save\nnpm install markdown-it-emoji --save\n```\n\n### 配置\n\n编辑站点文件\n\n```yaml\nmarkdown:\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n    - markdown-it-emoji\n```\n\n## 支持Gitter聊天室\n\n### 新建gitter.swig文件\n\n>  在~/*主题*/layout文件夹下创建，添加如下内容\n\n```javascript\n{% if theme.gitter.enable %}                                                                                                                                                              \n <script>                                                                                                                                                                                  \n   ((window.gitter = {}).chat = {}).options = {                                                                                                                                            \n    room: 'Newdee/newdee'                                                                                                                                                                 \n  };                                                                                                                                                                                      \n </script>                                                                                                                                                                                 \n <script src=\"https://sidecar.gitter.im/dist/sidecar.v1.js\" async defer></script>                                                                                                          \n  {% endif %}\n```\n\n### 配置\n\n* 设置样式\n\n  > 在~/themes/next/source/css\\_custom/custom.sty设置打开聊天室Button样式\n\n  ```css\n  .gitter-open-chat-button {                                                                                                                                                  \n        right: 20px;                                                                                                                              \n        padding: 10px;                                                                        \n        background-color: #777;                                                                                          \n  }                                                                                                                                                                                     \n  @media (max-width: 600px) {                                                                                                                                                  \n      .gitter-open-chat-button,                                                                                             \n      .gitter-chat-embed {                                                                    \n          display: none;                                                                    \n      }                                                                                       \n  }\n  ```\n\n* 添加Gitter到主题中\n\n  >  添加到body div前面\n\n  ```javascript\n  {% include './gitter.swig' %}\n  ```\n\n* 在主题配置文件开启gitter\n\n  ```yaml\n  # Gitter\n  gitter:\n    enable: true\n  ```\n\n## 支持字数统计\n\n> wordcount支持字数统计、阅读时长\n\n### 安装插件\n\n```shell\nnpm install hexo-wordcount --save\n```\n\n### 开启插件\n\n> 在主题配置文件修改\n\n```yaml\npost_wordcount:\n  item_text: true\n  wordcount: true\n  min2read: true\n```\n\n## 统计阅读次数\n\n### 集成leancloud\n\n#### 获取app_key和app_id\n\n在leancloud注册帐号，之后新建一个应用，在此应用里可以找到app_key和app_id\n\n![get app_key & app_id](https://s1.ax1x.com/2018/01/20/pRyK8H.png)\n\n#### 新建Class\n\n> 在新建的应用中创建一个Class，名称必须是Counter，其余默认即可\n\n![create class](https://s1.ax1x.com/2018/01/20/pRyUPg.png)\n\n#### 配置\n\n把app_key和app_id填充到主题配置文件中如下位置\n\n```yaml\nleancloud_visitors:\n  enable: true\n  app_id: yourapp_id\n  app_key: yourapp_key\n```\n## 添加版权声明\n\n### 添加声明信息\n\n> 在~\\themes\\next\\layout\\_macro\\post.swig合适位置添加如下内容，我是放在<footer class=\"post-footer\">标签黎明\n\n```javascript\n{# 版权声明节点 #}\n     <div>    \n      {% if not is_index %}\n      <ul class=\"post-copyright\">\n         <li class=\"post-copyright-link\">\n          <strong>本文作者：</strong>\n          <a href=\"/\" title=\"欢迎访问 {{ theme.author }} 的个人博客\">{{ theme.author }}</a>\n        </li>\n\n        <li class=\"post-copyright-link\">\n          <strong>本文标题：</strong>\n          <a href=\"{{ url_for(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.title }}</a>\n        </li>\n\n        <li class=\"post-copyright-link\">\n          <strong>本文链接：</strong>\n          <a href=\"{{ url_for(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.permalink }}</a>\n        </li>\n\n        <li class=\"post-copyright-date\">\n            <strong>发布时间：</strong>{{ post.date.format(\"YYYY年M月D日 - HH时MM分\") }}\n        </li>  \n\n        <li class=\"post-copyright-license\">\n          <strong>版权声明： </strong>\n          本文由采用 <a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\" rel=\"license\" target=\"_blank\">保留署名-非商业性使用-禁止演绎 4.0-国际许可协议</a> </br>转载请保留以上声明信息！\n        </li>\n      </ul>\n    {% endif %}\n  </div>\n```\n\n### 设置声明样式\n\n> 在~/themes/next/source/css\\_custom/custom.styl添加样式\n\n```css\n.post-copyright {\n    margin: 2em 0 0;\n    padding: 0.5em 1em;\n    border-left: 3px solid #FF1700;\n    background-color: #F9F9F9;\n    list-style: none;\n}\n```\n\n## 显示文章更新日期\n\n> 因为我用的是Next主题，所以操作非常简单，只需修改主题配置文件即可\n\n```yaml\npost_meta:\n  item_text: true\n  created_at: true\n  updated_at: true\n  categories: true\n```\n\n## 支持文章置顶\n\n### 下载插件\n\n```shell\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n### 添加置顶标签\n\n> 打开~/themes/next/layout/_macro/post.swig，在\\<div class=\"post-meta\">添加如下代码\n\n```javascript\n{% if post.top %}\n  <span class=\"post-meta-item-icon\">\n  \t<i class=\"fa fa-thumb-tack\"></i>\n  </span>\n  <font color=7D26CD>置顶</font>\n  <span class=\"post-meta-divider\">|</span>\n{% endif %}\n```\n\n### 添加标记\n\n> 在需要置顶的文章的 `Front-matter` 中加上 `top: true` 即可，\n\n比如：\n\n```yaml\ntitle: 打造个人阅读追踪系统\ndate: 2018-01-13 21:03:34\ncategories: \"生产力\"\ntop: true\n```\n\n## 支持文章分享\n\n### 修改过气API\n\n> 这是目前找到的唯一支持https的分享插件，但是分享到微信的api有改动，所以需要修改~\\themes\\next\\source\\lib\\needsharebutton\\needsharebutton.js如下位置\n\n```javascript\n/**\n找到imaSrc定义的位置，改为如下\n**/\nvar imgSrc = \"https://pan.baidu.com/share/qrcode?w=400&h=400&url=\" + encodeURIComponent(myoptions.url);\n```\n\n### 启用分享\n\n> 因为next主题已经集成needsharebutton插件，所以只需要开启即可\n\n```yaml\nneedmoreshare2:\n  enable: true\n  postbottom:\n    enable: true\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomCenter\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n  float:\n    enable: true\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomRight\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n```\n\n## 开启RSS\n\n### 安装插件\n\n```shell\nnpm install hexo-generator-feed --save\n```\n\n### 配置\n\n> 打开站点配置文件，添加如下内容\n\n```yaml\nfeed:\n  type: atom //订阅协议（atom/ass2）\n  path: atom.xml //路径 \n  limit: 20\t\t//一次包含文章数量限制\n  hub:  //用不着不管\n  content: //订阅文件是否包含整个文章（\"true\"为是，留空为否）\n  content_limit: 140 //content为否时，包含的文章概要字数\n```\n\n##  智能显示更新时间\n\n> 如果没有设置*updated*关键字,Hexo默认取最近一次generate的时间作为更新时间，通常我们的文章不太可能一次性写完，所以真正发布后的更新才需要显示更新时间，这里修改为一天内写完的文章再次修改，不会显示更新时间\n\n打开~\\themes\\next\\layout\\_macro\\post.swig文件，参考如下修改，可以搜索*updated_at*，只修改了两处\n\n```javascript\n\n{% if theme.post_meta.created_at and theme.post_meta.updated_at and post.updated-post.date>24*3600*1000 %}\n              <span class=\"post-meta-divider\">|</span>\n            {% endif %}\n\n            {% if theme.post_meta.updated_at and post.updated-post.date>24*3600*1000 %}\n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-check-o\"></i>\n              </span>\n              {% if theme.post_meta.item_text %}\n                <span class=\"post-meta-item-text\">{{ __('post.modified') }}&#58;</span>\n              {% endif %}\n              <time title=\"{{ __('post.modified') }}\" itemprop=\"dateModified\" datetime=\"{{ moment(post.updated).format() }}\">\n                {{ date(post.updated, config.date_format) }}\n              </time>\n            {% endif %}\n```\n\n## 支持站点地图\n\n### Google\n\n#### 安装插件\n\n```shell\nnpm install hexo-generator-sitemap --save\n```\n\n#### 配置\n\n> 在站点配置文件下，添加如下内容\n\n```yaml\n# sitemap\nsitemap:\n    path: sitemap.xml\n```\n\n#### 验证网站\n\n> 根据Google提示，下载验证文件放到Source文件夹，上传到网站，这里需要注意的是放到Source文件夹的任何文件默认是会被hexo处理的，这样会导致验证失败，下一步给出解决方案\n\n![step-1](https://s1.ax1x.com/2018/01/21/pfywMd.png)![step-2](https://s1.ax1x.com/2018/01/21/pfLwl9.png)\n\n#### 跳过编译验证文件\n\n> 只需要在站点配置文件指定即可，这里的文件路径是相对于Source\n\n```yaml\nskip_render: ['*.html']\n```\n\n#### 添加rebots.txt\n\n> 在~\\source下新建rebots.txt，内容可参考下面\n\n```yaml\nUser-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /about/\n\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://xuexiaoao.github.io/sitemap.xml\n```\n\n","source":"_posts/continuous-optimization-hexo.md","raw":"---\ntitle: 持续优化Hexo\ndate: 2018-01-15 22:50:30\ncategories: \"Hexo\"\n---\n\n本文主要记录Hexo的优化历程，以备后面翻阅。\n\n## 添加emoji支持\n\n由于Hexo的Markdown语法并不支持emoji表情，所以只能通过第三方插件来实现此功能\n\n### 安装\n\n```shell\nnpm i hexo-renderer-markdown-it --save\nnpm install markdown-it-emoji --save\n```\n\n### 配置\n\n编辑站点文件\n\n```yaml\nmarkdown:\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n    - markdown-it-emoji\n```\n\n## 支持Gitter聊天室\n\n### 新建gitter.swig文件\n\n>  在~/*主题*/layout文件夹下创建，添加如下内容\n\n```javascript\n{% if theme.gitter.enable %}                                                                                                                                                              \n <script>                                                                                                                                                                                  \n   ((window.gitter = {}).chat = {}).options = {                                                                                                                                            \n    room: 'Newdee/newdee'                                                                                                                                                                 \n  };                                                                                                                                                                                      \n </script>                                                                                                                                                                                 \n <script src=\"https://sidecar.gitter.im/dist/sidecar.v1.js\" async defer></script>                                                                                                          \n  {% endif %}\n```\n\n### 配置\n\n* 设置样式\n\n  > 在~/themes/next/source/css\\_custom/custom.sty设置打开聊天室Button样式\n\n  ```css\n  .gitter-open-chat-button {                                                                                                                                                  \n        right: 20px;                                                                                                                              \n        padding: 10px;                                                                        \n        background-color: #777;                                                                                          \n  }                                                                                                                                                                                     \n  @media (max-width: 600px) {                                                                                                                                                  \n      .gitter-open-chat-button,                                                                                             \n      .gitter-chat-embed {                                                                    \n          display: none;                                                                    \n      }                                                                                       \n  }\n  ```\n\n* 添加Gitter到主题中\n\n  >  添加到body div前面\n\n  ```javascript\n  {% include './gitter.swig' %}\n  ```\n\n* 在主题配置文件开启gitter\n\n  ```yaml\n  # Gitter\n  gitter:\n    enable: true\n  ```\n\n## 支持字数统计\n\n> wordcount支持字数统计、阅读时长\n\n### 安装插件\n\n```shell\nnpm install hexo-wordcount --save\n```\n\n### 开启插件\n\n> 在主题配置文件修改\n\n```yaml\npost_wordcount:\n  item_text: true\n  wordcount: true\n  min2read: true\n```\n\n## 统计阅读次数\n\n### 集成leancloud\n\n#### 获取app_key和app_id\n\n在leancloud注册帐号，之后新建一个应用，在此应用里可以找到app_key和app_id\n\n![get app_key & app_id](https://s1.ax1x.com/2018/01/20/pRyK8H.png)\n\n#### 新建Class\n\n> 在新建的应用中创建一个Class，名称必须是Counter，其余默认即可\n\n![create class](https://s1.ax1x.com/2018/01/20/pRyUPg.png)\n\n#### 配置\n\n把app_key和app_id填充到主题配置文件中如下位置\n\n```yaml\nleancloud_visitors:\n  enable: true\n  app_id: yourapp_id\n  app_key: yourapp_key\n```\n## 添加版权声明\n\n### 添加声明信息\n\n> 在~\\themes\\next\\layout\\_macro\\post.swig合适位置添加如下内容，我是放在<footer class=\"post-footer\">标签黎明\n\n```javascript\n{# 版权声明节点 #}\n     <div>    \n      {% if not is_index %}\n      <ul class=\"post-copyright\">\n         <li class=\"post-copyright-link\">\n          <strong>本文作者：</strong>\n          <a href=\"/\" title=\"欢迎访问 {{ theme.author }} 的个人博客\">{{ theme.author }}</a>\n        </li>\n\n        <li class=\"post-copyright-link\">\n          <strong>本文标题：</strong>\n          <a href=\"{{ url_for(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.title }}</a>\n        </li>\n\n        <li class=\"post-copyright-link\">\n          <strong>本文链接：</strong>\n          <a href=\"{{ url_for(post.permalink) }}\" title=\"{{ post.title }}\">{{ post.permalink }}</a>\n        </li>\n\n        <li class=\"post-copyright-date\">\n            <strong>发布时间：</strong>{{ post.date.format(\"YYYY年M月D日 - HH时MM分\") }}\n        </li>  \n\n        <li class=\"post-copyright-license\">\n          <strong>版权声明： </strong>\n          本文由采用 <a href=\"https://creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\" rel=\"license\" target=\"_blank\">保留署名-非商业性使用-禁止演绎 4.0-国际许可协议</a> </br>转载请保留以上声明信息！\n        </li>\n      </ul>\n    {% endif %}\n  </div>\n```\n\n### 设置声明样式\n\n> 在~/themes/next/source/css\\_custom/custom.styl添加样式\n\n```css\n.post-copyright {\n    margin: 2em 0 0;\n    padding: 0.5em 1em;\n    border-left: 3px solid #FF1700;\n    background-color: #F9F9F9;\n    list-style: none;\n}\n```\n\n## 显示文章更新日期\n\n> 因为我用的是Next主题，所以操作非常简单，只需修改主题配置文件即可\n\n```yaml\npost_meta:\n  item_text: true\n  created_at: true\n  updated_at: true\n  categories: true\n```\n\n## 支持文章置顶\n\n### 下载插件\n\n```shell\nnpm uninstall hexo-generator-index --save\nnpm install hexo-generator-index-pin-top --save\n```\n\n### 添加置顶标签\n\n> 打开~/themes/next/layout/_macro/post.swig，在\\<div class=\"post-meta\">添加如下代码\n\n```javascript\n{% if post.top %}\n  <span class=\"post-meta-item-icon\">\n  \t<i class=\"fa fa-thumb-tack\"></i>\n  </span>\n  <font color=7D26CD>置顶</font>\n  <span class=\"post-meta-divider\">|</span>\n{% endif %}\n```\n\n### 添加标记\n\n> 在需要置顶的文章的 `Front-matter` 中加上 `top: true` 即可，\n\n比如：\n\n```yaml\ntitle: 打造个人阅读追踪系统\ndate: 2018-01-13 21:03:34\ncategories: \"生产力\"\ntop: true\n```\n\n## 支持文章分享\n\n### 修改过气API\n\n> 这是目前找到的唯一支持https的分享插件，但是分享到微信的api有改动，所以需要修改~\\themes\\next\\source\\lib\\needsharebutton\\needsharebutton.js如下位置\n\n```javascript\n/**\n找到imaSrc定义的位置，改为如下\n**/\nvar imgSrc = \"https://pan.baidu.com/share/qrcode?w=400&h=400&url=\" + encodeURIComponent(myoptions.url);\n```\n\n### 启用分享\n\n> 因为next主题已经集成needsharebutton插件，所以只需要开启即可\n\n```yaml\nneedmoreshare2:\n  enable: true\n  postbottom:\n    enable: true\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomCenter\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n  float:\n    enable: true\n    options:\n      iconStyle: box\n      boxForm: horizontal\n      position: bottomRight\n      networks: Weibo,Wechat,Douban,QQZone,Twitter,Facebook\n```\n\n## 开启RSS\n\n### 安装插件\n\n```shell\nnpm install hexo-generator-feed --save\n```\n\n### 配置\n\n> 打开站点配置文件，添加如下内容\n\n```yaml\nfeed:\n  type: atom //订阅协议（atom/ass2）\n  path: atom.xml //路径 \n  limit: 20\t\t//一次包含文章数量限制\n  hub:  //用不着不管\n  content: //订阅文件是否包含整个文章（\"true\"为是，留空为否）\n  content_limit: 140 //content为否时，包含的文章概要字数\n```\n\n##  智能显示更新时间\n\n> 如果没有设置*updated*关键字,Hexo默认取最近一次generate的时间作为更新时间，通常我们的文章不太可能一次性写完，所以真正发布后的更新才需要显示更新时间，这里修改为一天内写完的文章再次修改，不会显示更新时间\n\n打开~\\themes\\next\\layout\\_macro\\post.swig文件，参考如下修改，可以搜索*updated_at*，只修改了两处\n\n```javascript\n\n{% if theme.post_meta.created_at and theme.post_meta.updated_at and post.updated-post.date>24*3600*1000 %}\n              <span class=\"post-meta-divider\">|</span>\n            {% endif %}\n\n            {% if theme.post_meta.updated_at and post.updated-post.date>24*3600*1000 %}\n              <span class=\"post-meta-item-icon\">\n                <i class=\"fa fa-calendar-check-o\"></i>\n              </span>\n              {% if theme.post_meta.item_text %}\n                <span class=\"post-meta-item-text\">{{ __('post.modified') }}&#58;</span>\n              {% endif %}\n              <time title=\"{{ __('post.modified') }}\" itemprop=\"dateModified\" datetime=\"{{ moment(post.updated).format() }}\">\n                {{ date(post.updated, config.date_format) }}\n              </time>\n            {% endif %}\n```\n\n## 支持站点地图\n\n### Google\n\n#### 安装插件\n\n```shell\nnpm install hexo-generator-sitemap --save\n```\n\n#### 配置\n\n> 在站点配置文件下，添加如下内容\n\n```yaml\n# sitemap\nsitemap:\n    path: sitemap.xml\n```\n\n#### 验证网站\n\n> 根据Google提示，下载验证文件放到Source文件夹，上传到网站，这里需要注意的是放到Source文件夹的任何文件默认是会被hexo处理的，这样会导致验证失败，下一步给出解决方案\n\n![step-1](https://s1.ax1x.com/2018/01/21/pfywMd.png)![step-2](https://s1.ax1x.com/2018/01/21/pfLwl9.png)\n\n#### 跳过编译验证文件\n\n> 只需要在站点配置文件指定即可，这里的文件路径是相对于Source\n\n```yaml\nskip_render: ['*.html']\n```\n\n#### 添加rebots.txt\n\n> 在~\\source下新建rebots.txt，内容可参考下面\n\n```yaml\nUser-agent: *\nAllow: /\nAllow: /archives/\nAllow: /categories/\nAllow: /about/\n\nDisallow: /vendors/\nDisallow: /js/\nDisallow: /css/\nDisallow: /fonts/\nDisallow: /vendors/\nDisallow: /fancybox/\n\nSitemap: https://xuexiaoao.github.io/sitemap.xml\n```\n\n","slug":"continuous-optimization-hexo","published":1,"updated":"2018-01-21T15:47:50.352Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd4odl9o0002qswmmx396m8c","content":"<p>本文主要记录Hexo的优化历程，以备后面翻阅。</p>\n<h2 id=\"添加emoji支持\"><a class=\"header-anchor\" href=\"#添加emoji支持\"></a>添加emoji支持</h2>\n<p>由于Hexo的Markdown语法并不支持emoji表情，所以只能通过第三方插件来实现此功能</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\"></a>安装</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-renderer-markdown-it --save</span><br><span class=\"line\">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a class=\"header-anchor\" href=\"#配置\"></a>配置</h3>\n<p>编辑站点文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  plugins:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-footnote</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-sup</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-sub</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-abbr</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-emoji</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持gitter聊天室\"><a class=\"header-anchor\" href=\"#支持gitter聊天室\"></a>支持Gitter聊天室</h2>\n<h3 id=\"新建gitter-swig文件\"><a class=\"header-anchor\" href=\"#新建gitter-swig文件\"></a>新建gitter.swig文件</h3>\n<blockquote>\n<p>在~/<em>主题</em>/layout文件夹下创建，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.gitter.enable %&#125;                                                                                                                                                              </span><br><span class=\"line\"> &lt;script&gt;                                                                                                                                                                                  </span><br><span class=\"line\">   ((<span class=\"built_in\">window</span>.gitter = &#123;&#125;).chat = &#123;&#125;).options = &#123;                                                                                                                                            </span><br><span class=\"line\">    room: <span class=\"string\">'Newdee/newdee'</span>                                                                                                                                                                 </span><br><span class=\"line\">  &#125;;                                                                                                                                                                                      </span><br><span class=\"line\"> &lt;<span class=\"regexp\">/script&gt;                                                                                                                                                                                 </span></span><br><span class=\"line\"><span class=\"regexp\"> &lt;script src=\"https:/</span><span class=\"regexp\">/sidecar.gitter.im/</span>dist/sidecar.v1.js<span class=\"string\">\" async defer&gt;&lt;/script&gt;                                                                                                          </span></span><br><span class=\"line\"><span class=\"string\">  &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-v2\"><a class=\"header-anchor\" href=\"#配置-v2\"></a>配置</h3>\n<ul>\n<li>\n<p>设置样式</p>\n<blockquote>\n<p>在~/themes/next/source/css_custom/custom.sty设置打开聊天室Button样式</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.gitter-open-chat-button</span> &#123;                                                                                                                                                  </span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;                                                                                                                              </span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;                                                                        </span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#777</span>;                                                                                          </span><br><span class=\"line\">&#125;                                                                                                                                                                                     </span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">600px</span>) &#123;                                                                                                                                                  </span><br><span class=\"line\">    <span class=\"selector-class\">.gitter-open-chat-button</span>,                                                                                             </span><br><span class=\"line\">    <span class=\"selector-class\">.gitter-chat-embed</span> &#123;                                                                    </span><br><span class=\"line\">        <span class=\"attribute\">display</span>: none;                                                                    </span><br><span class=\"line\">    &#125;                                                                                       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加Gitter到主题中</p>\n<blockquote>\n<p>添加到body div前面</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include <span class=\"string\">'./gitter.swig'</span> %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在主题配置文件开启gitter</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Gitter</span></span><br><span class=\"line\"><span class=\"attr\">gitter:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"支持字数统计\"><a class=\"header-anchor\" href=\"#支持字数统计\"></a>支持字数统计</h2>\n<blockquote>\n<p>wordcount支持字数统计、阅读时长</p>\n</blockquote>\n<h3 id=\"安装插件\"><a class=\"header-anchor\" href=\"#安装插件\"></a>安装插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启插件\"><a class=\"header-anchor\" href=\"#开启插件\"></a>开启插件</h3>\n<blockquote>\n<p>在主题配置文件修改</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_wordcount:</span></span><br><span class=\"line\"><span class=\"attr\">  item_text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  wordcount:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  min2read:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"统计阅读次数\"><a class=\"header-anchor\" href=\"#统计阅读次数\"></a>统计阅读次数</h2>\n<h3 id=\"集成leancloud\"><a class=\"header-anchor\" href=\"#集成leancloud\"></a>集成leancloud</h3>\n<h4 id=\"获取app-key和app-id\"><a class=\"header-anchor\" href=\"#获取app-key和app-id\"></a>获取app_key和app_id</h4>\n<p>在leancloud注册帐号，之后新建一个应用，在此应用里可以找到app_key和app_id</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/20/pRyK8H.png\" alt=\"get app_key &amp;amp; app_id\"></p>\n<h4 id=\"新建class\"><a class=\"header-anchor\" href=\"#新建class\"></a>新建Class</h4>\n<blockquote>\n<p>在新建的应用中创建一个Class，名称必须是Counter，其余默认即可</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2018/01/20/pRyUPg.png\" alt=\"create class\"></p>\n<h4 id=\"配置-v3\"><a class=\"header-anchor\" href=\"#配置-v3\"></a>配置</h4>\n<p>把app_key和app_id填充到主题配置文件中如下位置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">leancloud_visitors:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  app_id:</span> <span class=\"string\">yourapp_id</span></span><br><span class=\"line\"><span class=\"attr\">  app_key:</span> <span class=\"string\">yourapp_key</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加版权声明\"><a class=\"header-anchor\" href=\"#添加版权声明\"></a>添加版权声明</h2>\n<h3 id=\"添加声明信息\"><a class=\"header-anchor\" href=\"#添加声明信息\"></a>添加声明信息</h3>\n<blockquote>\n<p>在~\\themes\\next\\layout_macro\\post.swig合适位置添加如下内容，我是放在<footer class=\"post-footer\">标签黎明</footer></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;# 版权声明节点 #&#125;</span><br><span class=\"line\">     &lt;div&gt;    </span><br><span class=\"line\">      &#123;% <span class=\"keyword\">if</span> not is_index %&#125;</span><br><span class=\"line\">      &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-copyright\"</span>&gt;</span><br><span class=\"line\">         &lt;li <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-copyright-link\"</span>&gt;</span><br><span class=\"line\">          &lt;strong&gt;本文作者：&lt;<span class=\"regexp\">/strong&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;a href=\"/</span><span class=\"string\">\" title=\"</span>欢迎访问 &#123;&#123; theme.author &#125;&#125; 的个人博客<span class=\"string\">\"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-link<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;本文标题：&lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;a href=\"</span>&#123;&#123; url_for(post.permalink) &#125;&#125;<span class=\"string\">\" title=\"</span>&#123;&#123; post.title &#125;&#125;<span class=\"string\">\"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-link<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;本文链接：&lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;a href=\"</span>&#123;&#123; url_for(post.permalink) &#125;&#125;<span class=\"string\">\" title=\"</span>&#123;&#123; post.title &#125;&#125;<span class=\"string\">\"&gt;&#123;&#123; post.permalink &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-date<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;strong&gt;发布时间：&lt;/strong&gt;&#123;&#123; post.date.format(\"</span>YYYY年M月D日 - HH时MM分<span class=\"string\">\") &#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-license<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;版权声明： &lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          本文由采用 &lt;a href=\"</span>https:<span class=\"comment\">//creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\" rel=\"license\" target=\"_blank\"&gt;保留署名-非商业性使用-禁止演绎 4.0-国际许可协议&lt;/a&gt; &lt;/br&gt;转载请保留以上声明信息！</span></span><br><span class=\"line\">        &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/u</span>l&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"设置声明样式\"><a class=\"header-anchor\" href=\"#设置声明样式\"></a>设置声明样式</h3>\n<blockquote>\n<p>在~/themes/next/source/css_custom/custom.styl添加样式</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-copyright</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">2em</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0.5em</span> <span class=\"number\">1em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#FF1700</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#F9F9F9</span>;</span><br><span class=\"line\">    <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"显示文章更新日期\"><a class=\"header-anchor\" href=\"#显示文章更新日期\"></a>显示文章更新日期</h2>\n<blockquote>\n<p>因为我用的是Next主题，所以操作非常简单，只需修改主题配置文件即可</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\"><span class=\"attr\">  item_text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  created_at:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  updated_at:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持文章置顶\"><a class=\"header-anchor\" href=\"#支持文章置顶\"></a>支持文章置顶</h2>\n<h3 id=\"下载插件\"><a class=\"header-anchor\" href=\"#下载插件\"></a>下载插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加置顶标签\"><a class=\"header-anchor\" href=\"#添加置顶标签\"></a>添加置顶标签</h3>\n<blockquote>\n<p>打开~/themes/next/layout/_macro/post.swig，在&lt;div class=“post-meta”&gt;添加如下代码</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> post.top %&#125;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-item-icon\"</span>&gt;</span><br><span class=\"line\">  \t&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fa fa-thumb-tack\"</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;font color=7D26CD&gt;置顶&lt;/</span>font&gt;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加标记\"><a class=\"header-anchor\" href=\"#添加标记\"></a>添加标记</h3>\n<blockquote>\n<p>在需要置顶的文章的 <code>Front-matter</code> 中加上 <code>top: true</code> 即可，</p>\n</blockquote>\n<p>比如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">打造个人阅读追踪系统</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2018</span><span class=\"bullet\">-01</span><span class=\"bullet\">-13</span> <span class=\"number\">21</span><span class=\"string\">:03:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">\"生产力\"</span></span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持文章分享\"><a class=\"header-anchor\" href=\"#支持文章分享\"></a>支持文章分享</h2>\n<h3 id=\"修改过气api\"><a class=\"header-anchor\" href=\"#修改过气api\"></a>修改过气API</h3>\n<blockquote>\n<p>这是目前找到的唯一支持https的分享插件，但是分享到微信的api有改动，所以需要修改~\\themes\\next\\source\\lib\\needsharebutton\\needsharebutton.js如下位置</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">找到imaSrc定义的位置，改为如下</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> imgSrc = <span class=\"string\">\"https://pan.baidu.com/share/qrcode?w=400&amp;h=400&amp;url=\"</span> + <span class=\"built_in\">encodeURIComponent</span>(myoptions.url);</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用分享\"><a class=\"header-anchor\" href=\"#启用分享\"></a>启用分享</h3>\n<blockquote>\n<p>因为next主题已经集成needsharebutton插件，所以只需要开启即可</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">needmoreshare2:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  postbottom:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    options:</span></span><br><span class=\"line\"><span class=\"attr\">      iconStyle:</span> <span class=\"string\">box</span></span><br><span class=\"line\"><span class=\"attr\">      boxForm:</span> <span class=\"string\">horizontal</span></span><br><span class=\"line\"><span class=\"attr\">      position:</span> <span class=\"string\">bottomCenter</span></span><br><span class=\"line\"><span class=\"attr\">      networks:</span> <span class=\"string\">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br><span class=\"line\"><span class=\"attr\">  float:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    options:</span></span><br><span class=\"line\"><span class=\"attr\">      iconStyle:</span> <span class=\"string\">box</span></span><br><span class=\"line\"><span class=\"attr\">      boxForm:</span> <span class=\"string\">horizontal</span></span><br><span class=\"line\"><span class=\"attr\">      position:</span> <span class=\"string\">bottomRight</span></span><br><span class=\"line\"><span class=\"attr\">      networks:</span> <span class=\"string\">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"开启rss\"><a class=\"header-anchor\" href=\"#开启rss\"></a>开启RSS</h2>\n<h3 id=\"安装插件-v2\"><a class=\"header-anchor\" href=\"#安装插件-v2\"></a>安装插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-v4\"><a class=\"header-anchor\" href=\"#配置-v4\"></a>配置</h3>\n<blockquote>\n<p>打开站点配置文件，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">feed:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">atom</span> <span class=\"string\">//订阅协议（atom/ass2）</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">atom.xml</span> <span class=\"string\">//路径</span> </span><br><span class=\"line\"><span class=\"attr\">  limit:</span> <span class=\"number\">20</span>\t\t<span class=\"string\">//一次包含文章数量限制</span></span><br><span class=\"line\"><span class=\"attr\">  hub:</span>  <span class=\"string\">//用不着不管</span></span><br><span class=\"line\"><span class=\"attr\">  content:</span> <span class=\"string\">//订阅文件是否包含整个文章（\"true\"为是，留空为否）</span></span><br><span class=\"line\"><span class=\"attr\">  content_limit:</span> <span class=\"number\">140</span> <span class=\"string\">//content为否时，包含的文章概要字数</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"智能显示更新时间\"><a class=\"header-anchor\" href=\"#智能显示更新时间\"></a>智能显示更新时间</h2>\n<blockquote>\n<p>如果没有设置<em>updated</em>关键字,Hexo默认取最近一次generate的时间作为更新时间，通常我们的文章不太可能一次性写完，所以真正发布后的更新才需要显示更新时间，这里修改为一天内写完的文章再次修改，不会显示更新时间</p>\n</blockquote>\n<p>打开~\\themes\\next\\layout_macro\\post.swig文件，参考如下修改，可以搜索<em>updated_at</em>，只修改了两处</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.post_meta.created_at and theme.post_meta.updated_at and post.updated-post.date&gt;<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">1000</span> %&#125;</span><br><span class=\"line\">              &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">            &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#123;% <span class=\"keyword\">if</span> theme.post_meta.updated_at and post.updated-post.date&gt;<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">1000</span> %&#125;</span><br><span class=\"line\">              &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-item-icon\"</span>&gt;</span><br><span class=\"line\">                &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fa fa-calendar-check-o\"</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">              &#123;% if theme.post_meta.item_text %&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;span class=\"post-meta-item-text\"&gt;&#123;&#123; __('post.modified') &#125;&#125;&amp;#58;&lt;/</span>span&gt;</span><br><span class=\"line\">              &#123;% endif %&#125;</span><br><span class=\"line\">              &lt;time title=<span class=\"string\">\"&#123;&#123; __('post.modified') &#125;&#125;\"</span> itemprop=<span class=\"string\">\"dateModified\"</span> datetime=<span class=\"string\">\"&#123;&#123; moment(post.updated).format() &#125;&#125;\"</span>&gt;</span><br><span class=\"line\">                &#123;&#123; date(post.updated, config.date_format) &#125;&#125;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/time&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持站点地图\"><a class=\"header-anchor\" href=\"#支持站点地图\"></a>支持站点地图</h2>\n<h3 id=\"google\"><a class=\"header-anchor\" href=\"#google\"></a>Google</h3>\n<h4 id=\"安装插件-v3\"><a class=\"header-anchor\" href=\"#安装插件-v3\"></a>安装插件</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-v5\"><a class=\"header-anchor\" href=\"#配置-v5\"></a>配置</h4>\n<blockquote>\n<p>在站点配置文件下，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">    path:</span> <span class=\"string\">sitemap.xml</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"验证网站\"><a class=\"header-anchor\" href=\"#验证网站\"></a>验证网站</h4>\n<blockquote>\n<p>根据Google提示，下载验证文件放到Source文件夹，上传到网站，这里需要注意的是放到Source文件夹的任何文件默认是会被hexo处理的，这样会导致验证失败，下一步给出解决方案</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2018/01/21/pfywMd.png\" alt=\"step-1\"><img src=\"https://s1.ax1x.com/2018/01/21/pfLwl9.png\" alt=\"step-2\"></p>\n<h4 id=\"跳过编译验证文件\"><a class=\"header-anchor\" href=\"#跳过编译验证文件\"></a>跳过编译验证文件</h4>\n<blockquote>\n<p>只需要在站点配置文件指定即可，这里的文件路径是相对于Source</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">skip_render:</span> <span class=\"string\">['*.html']</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加rebots-txt\"><a class=\"header-anchor\" href=\"#添加rebots-txt\"></a>添加rebots.txt</h4>\n<blockquote>\n<p>在~\\source下新建rebots.txt，内容可参考下面</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">User-agent:</span> <span class=\"string\">*</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/archives/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/categories/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/about/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/vendors/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/js/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/css/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/fonts/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/vendors/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/fancybox/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Sitemap:</span> <span class=\"attr\">https://xuexiaoao.github.io/sitemap.xml</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>本文主要记录Hexo的优化历程，以备后面翻阅。</p>\n<h2 id=\"添加emoji支持\"><a class=\"header-anchor\" href=\"#添加emoji支持\"></a>添加emoji支持</h2>\n<p>由于Hexo的Markdown语法并不支持emoji表情，所以只能通过第三方插件来实现此功能</p>\n<h3 id=\"安装\"><a class=\"header-anchor\" href=\"#安装\"></a>安装</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i hexo-renderer-markdown-it --save</span><br><span class=\"line\">npm install markdown-it-emoji --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置\"><a class=\"header-anchor\" href=\"#配置\"></a>配置</h3>\n<p>编辑站点文件</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">markdown:</span></span><br><span class=\"line\"><span class=\"attr\">  plugins:</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-footnote</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-sup</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-sub</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-abbr</span></span><br><span class=\"line\"><span class=\"bullet\">    -</span> <span class=\"string\">markdown-it-emoji</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持gitter聊天室\"><a class=\"header-anchor\" href=\"#支持gitter聊天室\"></a>支持Gitter聊天室</h2>\n<h3 id=\"新建gitter-swig文件\"><a class=\"header-anchor\" href=\"#新建gitter-swig文件\"></a>新建gitter.swig文件</h3>\n<blockquote>\n<p>在~/<em>主题</em>/layout文件夹下创建，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.gitter.enable %&#125;                                                                                                                                                              </span><br><span class=\"line\"> &lt;script&gt;                                                                                                                                                                                  </span><br><span class=\"line\">   ((<span class=\"built_in\">window</span>.gitter = &#123;&#125;).chat = &#123;&#125;).options = &#123;                                                                                                                                            </span><br><span class=\"line\">    room: <span class=\"string\">'Newdee/newdee'</span>                                                                                                                                                                 </span><br><span class=\"line\">  &#125;;                                                                                                                                                                                      </span><br><span class=\"line\"> &lt;<span class=\"regexp\">/script&gt;                                                                                                                                                                                 </span></span><br><span class=\"line\"><span class=\"regexp\"> &lt;script src=\"https:/</span><span class=\"regexp\">/sidecar.gitter.im/</span>dist/sidecar.v1.js<span class=\"string\">\" async defer&gt;&lt;/script&gt;                                                                                                          </span></span><br><span class=\"line\"><span class=\"string\">  &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-v2\"><a class=\"header-anchor\" href=\"#配置-v2\"></a>配置</h3>\n<ul>\n<li>\n<p>设置样式</p>\n<blockquote>\n<p>在~/themes/next/source/css_custom/custom.sty设置打开聊天室Button样式</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.gitter-open-chat-button</span> &#123;                                                                                                                                                  </span><br><span class=\"line\">      <span class=\"attribute\">right</span>: <span class=\"number\">20px</span>;                                                                                                                              </span><br><span class=\"line\">      <span class=\"attribute\">padding</span>: <span class=\"number\">10px</span>;                                                                        </span><br><span class=\"line\">      <span class=\"attribute\">background-color</span>: <span class=\"number\">#777</span>;                                                                                          </span><br><span class=\"line\">&#125;                                                                                                                                                                                     </span><br><span class=\"line\">@<span class=\"keyword\">media</span> (max-width: <span class=\"number\">600px</span>) &#123;                                                                                                                                                  </span><br><span class=\"line\">    <span class=\"selector-class\">.gitter-open-chat-button</span>,                                                                                             </span><br><span class=\"line\">    <span class=\"selector-class\">.gitter-chat-embed</span> &#123;                                                                    </span><br><span class=\"line\">        <span class=\"attribute\">display</span>: none;                                                                    </span><br><span class=\"line\">    &#125;                                                                                       </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>添加Gitter到主题中</p>\n<blockquote>\n<p>添加到body div前面</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% include <span class=\"string\">'./gitter.swig'</span> %&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>在主题配置文件开启gitter</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Gitter</span></span><br><span class=\"line\"><span class=\"attr\">gitter:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h2 id=\"支持字数统计\"><a class=\"header-anchor\" href=\"#支持字数统计\"></a>支持字数统计</h2>\n<blockquote>\n<p>wordcount支持字数统计、阅读时长</p>\n</blockquote>\n<h3 id=\"安装插件\"><a class=\"header-anchor\" href=\"#安装插件\"></a>安装插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"开启插件\"><a class=\"header-anchor\" href=\"#开启插件\"></a>开启插件</h3>\n<blockquote>\n<p>在主题配置文件修改</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_wordcount:</span></span><br><span class=\"line\"><span class=\"attr\">  item_text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  wordcount:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  min2read:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"统计阅读次数\"><a class=\"header-anchor\" href=\"#统计阅读次数\"></a>统计阅读次数</h2>\n<h3 id=\"集成leancloud\"><a class=\"header-anchor\" href=\"#集成leancloud\"></a>集成leancloud</h3>\n<h4 id=\"获取app-key和app-id\"><a class=\"header-anchor\" href=\"#获取app-key和app-id\"></a>获取app_key和app_id</h4>\n<p>在leancloud注册帐号，之后新建一个应用，在此应用里可以找到app_key和app_id</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/20/pRyK8H.png\" alt=\"get app_key &amp;amp; app_id\"></p>\n<h4 id=\"新建class\"><a class=\"header-anchor\" href=\"#新建class\"></a>新建Class</h4>\n<blockquote>\n<p>在新建的应用中创建一个Class，名称必须是Counter，其余默认即可</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2018/01/20/pRyUPg.png\" alt=\"create class\"></p>\n<h4 id=\"配置-v3\"><a class=\"header-anchor\" href=\"#配置-v3\"></a>配置</h4>\n<p>把app_key和app_id填充到主题配置文件中如下位置</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">leancloud_visitors:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  app_id:</span> <span class=\"string\">yourapp_id</span></span><br><span class=\"line\"><span class=\"attr\">  app_key:</span> <span class=\"string\">yourapp_key</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"添加版权声明\"><a class=\"header-anchor\" href=\"#添加版权声明\"></a>添加版权声明</h2>\n<h3 id=\"添加声明信息\"><a class=\"header-anchor\" href=\"#添加声明信息\"></a>添加声明信息</h3>\n<blockquote>\n<p>在~\\themes\\next\\layout_macro\\post.swig合适位置添加如下内容，我是放在<footer class=\"post-footer\">标签黎明</footer></p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;# 版权声明节点 #&#125;</span><br><span class=\"line\">     &lt;div&gt;    </span><br><span class=\"line\">      &#123;% <span class=\"keyword\">if</span> not is_index %&#125;</span><br><span class=\"line\">      &lt;ul <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-copyright\"</span>&gt;</span><br><span class=\"line\">         &lt;li <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-copyright-link\"</span>&gt;</span><br><span class=\"line\">          &lt;strong&gt;本文作者：&lt;<span class=\"regexp\">/strong&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">          &lt;a href=\"/</span><span class=\"string\">\" title=\"</span>欢迎访问 &#123;&#123; theme.author &#125;&#125; 的个人博客<span class=\"string\">\"&gt;&#123;&#123; theme.author &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-link<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;本文标题：&lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;a href=\"</span>&#123;&#123; url_for(post.permalink) &#125;&#125;<span class=\"string\">\" title=\"</span>&#123;&#123; post.title &#125;&#125;<span class=\"string\">\"&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-link<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;本文链接：&lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;a href=\"</span>&#123;&#123; url_for(post.permalink) &#125;&#125;<span class=\"string\">\" title=\"</span>&#123;&#123; post.title &#125;&#125;<span class=\"string\">\"&gt;&#123;&#123; post.permalink &#125;&#125;&lt;/a&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-date<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;strong&gt;发布时间：&lt;/strong&gt;&#123;&#123; post.date.format(\"</span>YYYY年M月D日 - HH时MM分<span class=\"string\">\") &#125;&#125;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/li&gt;  </span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">        &lt;li class=\"</span>post-copyright-license<span class=\"string\">\"&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;strong&gt;版权声明： &lt;/strong&gt;</span></span><br><span class=\"line\"><span class=\"string\">          本文由采用 &lt;a href=\"</span>https:<span class=\"comment\">//creativecommons.org/licenses/by-nc-nd/4.0/deed.zh\" rel=\"license\" target=\"_blank\"&gt;保留署名-非商业性使用-禁止演绎 4.0-国际许可协议&lt;/a&gt; &lt;/br&gt;转载请保留以上声明信息！</span></span><br><span class=\"line\">        &lt;<span class=\"regexp\">/li&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">      &lt;/u</span>l&gt;</span><br><span class=\"line\">    &#123;% endif %&#125;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/div&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"设置声明样式\"><a class=\"header-anchor\" href=\"#设置声明样式\"></a>设置声明样式</h3>\n<blockquote>\n<p>在~/themes/next/source/css_custom/custom.styl添加样式</p>\n</blockquote>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.post-copyright</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">margin</span>: <span class=\"number\">2em</span> <span class=\"number\">0</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0.5em</span> <span class=\"number\">1em</span>;</span><br><span class=\"line\">    <span class=\"attribute\">border-left</span>: <span class=\"number\">3px</span> solid <span class=\"number\">#FF1700</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#F9F9F9</span>;</span><br><span class=\"line\">    <span class=\"attribute\">list-style</span>: none;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"显示文章更新日期\"><a class=\"header-anchor\" href=\"#显示文章更新日期\"></a>显示文章更新日期</h2>\n<blockquote>\n<p>因为我用的是Next主题，所以操作非常简单，只需修改主题配置文件即可</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">post_meta:</span></span><br><span class=\"line\"><span class=\"attr\">  item_text:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  created_at:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  updated_at:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  categories:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持文章置顶\"><a class=\"header-anchor\" href=\"#支持文章置顶\"></a>支持文章置顶</h2>\n<h3 id=\"下载插件\"><a class=\"header-anchor\" href=\"#下载插件\"></a>下载插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm uninstall hexo-generator-index --save</span><br><span class=\"line\">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加置顶标签\"><a class=\"header-anchor\" href=\"#添加置顶标签\"></a>添加置顶标签</h3>\n<blockquote>\n<p>打开~/themes/next/layout/_macro/post.swig，在&lt;div class=“post-meta”&gt;添加如下代码</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% <span class=\"keyword\">if</span> post.top %&#125;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-item-icon\"</span>&gt;</span><br><span class=\"line\">  \t&lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fa fa-thumb-tack\"</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">  &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">  &lt;font color=7D26CD&gt;置顶&lt;/</span>font&gt;</span><br><span class=\"line\">  &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"添加标记\"><a class=\"header-anchor\" href=\"#添加标记\"></a>添加标记</h3>\n<blockquote>\n<p>在需要置顶的文章的 <code>Front-matter</code> 中加上 <code>top: true</code> 即可，</p>\n</blockquote>\n<p>比如：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">title:</span> <span class=\"string\">打造个人阅读追踪系统</span></span><br><span class=\"line\"><span class=\"attr\">date:</span> <span class=\"number\">2018</span><span class=\"bullet\">-01</span><span class=\"bullet\">-13</span> <span class=\"number\">21</span><span class=\"string\">:03:34</span></span><br><span class=\"line\"><span class=\"attr\">categories:</span> <span class=\"string\">\"生产力\"</span></span><br><span class=\"line\"><span class=\"attr\">top:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持文章分享\"><a class=\"header-anchor\" href=\"#支持文章分享\"></a>支持文章分享</h2>\n<h3 id=\"修改过气api\"><a class=\"header-anchor\" href=\"#修改过气api\"></a>修改过气API</h3>\n<blockquote>\n<p>这是目前找到的唯一支持https的分享插件，但是分享到微信的api有改动，所以需要修改~\\themes\\next\\source\\lib\\needsharebutton\\needsharebutton.js如下位置</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">找到imaSrc定义的位置，改为如下</span></span><br><span class=\"line\"><span class=\"comment\">**/</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> imgSrc = <span class=\"string\">\"https://pan.baidu.com/share/qrcode?w=400&amp;h=400&amp;url=\"</span> + <span class=\"built_in\">encodeURIComponent</span>(myoptions.url);</span><br></pre></td></tr></table></figure>\n<h3 id=\"启用分享\"><a class=\"header-anchor\" href=\"#启用分享\"></a>启用分享</h3>\n<blockquote>\n<p>因为next主题已经集成needsharebutton插件，所以只需要开启即可</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">needmoreshare2:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  postbottom:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    options:</span></span><br><span class=\"line\"><span class=\"attr\">      iconStyle:</span> <span class=\"string\">box</span></span><br><span class=\"line\"><span class=\"attr\">      boxForm:</span> <span class=\"string\">horizontal</span></span><br><span class=\"line\"><span class=\"attr\">      position:</span> <span class=\"string\">bottomCenter</span></span><br><span class=\"line\"><span class=\"attr\">      networks:</span> <span class=\"string\">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br><span class=\"line\"><span class=\"attr\">  float:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">    options:</span></span><br><span class=\"line\"><span class=\"attr\">      iconStyle:</span> <span class=\"string\">box</span></span><br><span class=\"line\"><span class=\"attr\">      boxForm:</span> <span class=\"string\">horizontal</span></span><br><span class=\"line\"><span class=\"attr\">      position:</span> <span class=\"string\">bottomRight</span></span><br><span class=\"line\"><span class=\"attr\">      networks:</span> <span class=\"string\">Weibo,Wechat,Douban,QQZone,Twitter,Facebook</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"开启rss\"><a class=\"header-anchor\" href=\"#开启rss\"></a>开启RSS</h2>\n<h3 id=\"安装插件-v2\"><a class=\"header-anchor\" href=\"#安装插件-v2\"></a>安装插件</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure>\n<h3 id=\"配置-v4\"><a class=\"header-anchor\" href=\"#配置-v4\"></a>配置</h3>\n<blockquote>\n<p>打开站点配置文件，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">feed:</span></span><br><span class=\"line\"><span class=\"attr\">  type:</span> <span class=\"string\">atom</span> <span class=\"string\">//订阅协议（atom/ass2）</span></span><br><span class=\"line\"><span class=\"attr\">  path:</span> <span class=\"string\">atom.xml</span> <span class=\"string\">//路径</span> </span><br><span class=\"line\"><span class=\"attr\">  limit:</span> <span class=\"number\">20</span>\t\t<span class=\"string\">//一次包含文章数量限制</span></span><br><span class=\"line\"><span class=\"attr\">  hub:</span>  <span class=\"string\">//用不着不管</span></span><br><span class=\"line\"><span class=\"attr\">  content:</span> <span class=\"string\">//订阅文件是否包含整个文章（\"true\"为是，留空为否）</span></span><br><span class=\"line\"><span class=\"attr\">  content_limit:</span> <span class=\"number\">140</span> <span class=\"string\">//content为否时，包含的文章概要字数</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"智能显示更新时间\"><a class=\"header-anchor\" href=\"#智能显示更新时间\"></a>智能显示更新时间</h2>\n<blockquote>\n<p>如果没有设置<em>updated</em>关键字,Hexo默认取最近一次generate的时间作为更新时间，通常我们的文章不太可能一次性写完，所以真正发布后的更新才需要显示更新时间，这里修改为一天内写完的文章再次修改，不会显示更新时间</p>\n</blockquote>\n<p>打开~\\themes\\next\\layout_macro\\post.swig文件，参考如下修改，可以搜索<em>updated_at</em>，只修改了两处</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">&#123;% <span class=\"keyword\">if</span> theme.post_meta.created_at and theme.post_meta.updated_at and post.updated-post.date&gt;<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">1000</span> %&#125;</span><br><span class=\"line\">              &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-divider\"</span>&gt;|&lt;/span&gt;</span><br><span class=\"line\">            &#123;% endif %&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#123;% <span class=\"keyword\">if</span> theme.post_meta.updated_at and post.updated-post.date&gt;<span class=\"number\">24</span>*<span class=\"number\">3600</span>*<span class=\"number\">1000</span> %&#125;</span><br><span class=\"line\">              &lt;span <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"post-meta-item-icon\"</span>&gt;</span><br><span class=\"line\">                &lt;i <span class=\"class\"><span class=\"keyword\">class</span></span>=<span class=\"string\">\"fa fa-calendar-check-o\"</span>&gt;&lt;/i&gt;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/span&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">              &#123;% if theme.post_meta.item_text %&#125;</span></span><br><span class=\"line\"><span class=\"regexp\">                &lt;span class=\"post-meta-item-text\"&gt;&#123;&#123; __('post.modified') &#125;&#125;&amp;#58;&lt;/</span>span&gt;</span><br><span class=\"line\">              &#123;% endif %&#125;</span><br><span class=\"line\">              &lt;time title=<span class=\"string\">\"&#123;&#123; __('post.modified') &#125;&#125;\"</span> itemprop=<span class=\"string\">\"dateModified\"</span> datetime=<span class=\"string\">\"&#123;&#123; moment(post.updated).format() &#125;&#125;\"</span>&gt;</span><br><span class=\"line\">                &#123;&#123; date(post.updated, config.date_format) &#125;&#125;</span><br><span class=\"line\">              &lt;<span class=\"regexp\">/time&gt;</span></span><br><span class=\"line\"><span class=\"regexp\">            &#123;% endif %&#125;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"支持站点地图\"><a class=\"header-anchor\" href=\"#支持站点地图\"></a>支持站点地图</h2>\n<h3 id=\"google\"><a class=\"header-anchor\" href=\"#google\"></a>Google</h3>\n<h4 id=\"安装插件-v3\"><a class=\"header-anchor\" href=\"#安装插件-v3\"></a>安装插件</h4>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-generator-sitemap --save</span><br></pre></td></tr></table></figure>\n<h4 id=\"配置-v5\"><a class=\"header-anchor\" href=\"#配置-v5\"></a>配置</h4>\n<blockquote>\n<p>在站点配置文件下，添加如下内容</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># sitemap</span></span><br><span class=\"line\"><span class=\"attr\">sitemap:</span></span><br><span class=\"line\"><span class=\"attr\">    path:</span> <span class=\"string\">sitemap.xml</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"验证网站\"><a class=\"header-anchor\" href=\"#验证网站\"></a>验证网站</h4>\n<blockquote>\n<p>根据Google提示，下载验证文件放到Source文件夹，上传到网站，这里需要注意的是放到Source文件夹的任何文件默认是会被hexo处理的，这样会导致验证失败，下一步给出解决方案</p>\n</blockquote>\n<p><img src=\"https://s1.ax1x.com/2018/01/21/pfywMd.png\" alt=\"step-1\"><img src=\"https://s1.ax1x.com/2018/01/21/pfLwl9.png\" alt=\"step-2\"></p>\n<h4 id=\"跳过编译验证文件\"><a class=\"header-anchor\" href=\"#跳过编译验证文件\"></a>跳过编译验证文件</h4>\n<blockquote>\n<p>只需要在站点配置文件指定即可，这里的文件路径是相对于Source</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">skip_render:</span> <span class=\"string\">['*.html']</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"添加rebots-txt\"><a class=\"header-anchor\" href=\"#添加rebots-txt\"></a>添加rebots.txt</h4>\n<blockquote>\n<p>在~\\source下新建rebots.txt，内容可参考下面</p>\n</blockquote>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">User-agent:</span> <span class=\"string\">*</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/archives/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/categories/</span></span><br><span class=\"line\"><span class=\"attr\">Allow:</span> <span class=\"string\">/about/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/vendors/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/js/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/css/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/fonts/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/vendors/</span></span><br><span class=\"line\"><span class=\"attr\">Disallow:</span> <span class=\"string\">/fancybox/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">Sitemap:</span> <span class=\"attr\">https://xuexiaoao.github.io/sitemap.xml</span></span><br></pre></td></tr></table></figure>\n"},{"title":"打造个人阅读追踪系统","date":"2018-01-13T13:03:34.000Z","top":true,"_content":"\n> 偶然看到[<<我也来打造一个个人阅读追踪系统>>](https://juejin.im/post/59d975b6f265da065f04d8ff)，觉得这个想法非常不错。于是利用工作外的时间，经过半个月的折腾，初步搭成了一个自动化的个人阅读追踪系统。在这个系统搭成后，才发现Read it Later = Read Never离自己好近。\n\n## 工具\n\n包括但不仅仅局限于下面的工具，这里我使用*Instapaper*作为稍后阅读的工具，*IFTTT*作为连接*Instapaper*和*Cloud*的中枢，而*WebTask*作为我的云端处理工具，负责真正请求各类API。\n\n* [Github](https://github.com/)\n* [Zenhub](https://www.zenhub.com/)\n* [Instapaper](https://www.instapaper.com)\n* [IFTTT](https://ifttt.com)\n* [WebTask](https://webtask.io)\n\n## 工作流程\n\n在工作和生活中，我们经常会把文章保存到各种渠道中，比如印象笔记、Instapaper、Pocket等等，而这时，文章分散到各处，不利于我们了解和统计自己的阅读情况。这时是否可以在文章存档到各处后，自动在GItHub中创建一个Issues，而日后对文章的评论和圈点也会体现在Issues中，而且还有一个可视化的工具，详尽的展示了这一段时间内你的阅读情况，从而可以达到展示和督促的作用。\n\n![工作流程](https://s1.ax1x.com/2018/01/14/pYyosf.jpg)\n\n## 初始化WebTask\n\nwebTask作为*Serverless*架构的服务提供者，可以很方便的让我们在云端执行各类任务，在本文中，它的主要作用就是请求GitHub的API，以实现各类功能，比如给某个Issues添加评论、关闭某个Issues......\n\n### 安装命令行工具\n\n```js\nnpm install -g wt-cli\nwt init <YOUR-EMAIL>\n```\n\n### 创建项目\n\n新建一个node工程并添加index.js文件，补充如下代码：\n\n```javascript\nconst Express = require('express')\nconst Webtask = require('webtask-tools')\nconst bodyParser = require('body-parser')\nconst app = Express()\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\nrequire('./routes/reading')(app)\n\nmodule.exports = Webtask.fromExpress(app)\n```\n\n创建/routes/reading.js文件，这里以在仓库创建Issues为例，完整代码可参考[xuexiaoao/demo.serverless-mern](https://github.com/xuexiaoao/demo.serverless-mern)\n\n```javascript\nrequire('es6-promise').polyfill()\nrequire('isomorphic-fetch')\n\nconst REPO_OWNER = 'xuexiaoao'\nconst REPO_NAME = 'reading'\nconst REPO_ID = 107835589\n\nmodule.exports = (app) => {\n  app.post('/reading', (req, res) => {\n      const { GITHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN_V4 } = req.webtaskContext.secrets\n      const { action, issue } = JSON.parse(req.body.payload)\n      const { url, html_url, number } = issue\n\n      console.info(`[BEGIN] issue updated with action: ${action}`)\n\n      if (action === 'opened') {\n        fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n          method: 'PATCH',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ milestone: 1, }),\n        }).then(\n          () => console.info(`[END] set milestone successful! ${html_url}`),\n          (e) => res.json(e),\n        )\n      } else if (action === 'milestoned') {\n        fetch(`https://api.zenhub.io/p1/repositories/${REPO_ID}/issues/${number}/estimate?access_token=${ZENHUB_ACCESS_TOKEN}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ estimate: 1 }),\n        }).then(\n          () => console.info(`[END] Set estimate successful! ${html_url}`),\n          (e) => console.error(`[END] Failed to set estimate! ${html_url}`, e),\n        )\n        fetch(`https://api.zenhub.io/v4/reports/release/59ec29a2bedf0a4d94322b26/items/issues?access_token=${ZENHUB_ACCESS_TOKEN_V4}`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: `add_issues%5B0%5D%5Bissue_number%5D=${number}&add_issues%5B0%5D%5Brepo_id%5D=${REPO_ID}`,\n        }).then(\n          () => console.info(`[END] set release successful! ${html_url}`),\n          (e) => console.error(`[END] Failed to set release! ${html_url}`, e),\n        )\n      }\n\n      res.json({ message: 'issue updated!' })\n    },\n  )\n}\n```\n\n这里有几个地方需要注意:\n\n* REPO_OWNER：这是你的github名字\n* REPO_NAME：这是你的仓库名称，之后所有的Issues都会创建到这里\n* REPO_ID：这个id可以通过github api获得:https://api.github.com/users/${REPO_OWNER}\n* GITHUB_ACCESS_TOKEN：这个没什么好说的就是在github上新建一个Personal access tokens\n* ZENHUB_ACCESS_TOKEN：这个是在zenhub新建一个token\n* ZENHUB_ACCESS_TOKEN_V4：这个官方api没有说明，但是可以打开zenhub对应仓库的浏览器开发者工具，任意找一个是 [api.zenhub.io](http://disq.us/url?url=http%3A%2F%2Fapi.zenhub.io%3AFORqzzRjWezjzHYTAiHvtcMGeAQ&cuid=3228622) 的请求，在 Request Headers中找到 x-authentication-token 对应的值就是这个 token 了\n\n### 上传到webtask\n\n这里需要使用上面准备的token，然后执行命令即可。由于使用webtask的上下文绑定工具*webtask-tools*，它会对一些敏感信息，比如我们的token进行加密，所以不必担心token泄漏的问题。\n\n```shell\nwt create index --bundle --secret GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN=$ZENHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN_V4=$ZENHUB_ACCESS_TOKEN_V4\n```\n\n## 使用IFTTT自动化处理\n\n那如何保证一有文章存入*Instapaper*中，就会新建一个Issues呢，这里就需要IFTTT这个神器了，这里不对IFTTT做详细介绍，如果有机会，可以另开一篇文章，专门介绍IFTTT。\n\n得益于 IFTTT 非常丰富的第三方服务，IFTTT 可以直接创建 Instapaper 与 GitHub Issue 相集成的 Applet：[If new item saved, then create a new issue - IFTTT](https://ifttt.com/applets/54307045d-if-new-item-saved-then-create-a-new-issue)，就可以在当 Instapaper 新增文章的时候，自动在 GitHub 所指定的仓库 [xuexiaoao/reading](https://github.com/xuexiaoao/reading/issues) 中创建一个新的 Issue 并添加相应的标题、链接以及描述等相关信息\n\n这里给出*把文章保存到Instapaper后，自动在仓库创建Issues的例子*，其他的操作都可以类似处理，如果有疑问，可以在本文留言。\n\n<img src='https://s1.ax1x.com/2018/01/14/ptXYtJ.png' width=\"30%\" height=\"30%\" >\n\n<img src='https://s1.ax1x.com/2018/01/14/ptONsf.png' width=\"30%\" height=\"30%\" >\n\n## 集成ZenHub\n\n现在仅仅会自动新建Issues，而我们还需要把Issues添加到Milestone中，就可以利用Zenhub的图表功能，可视化的查看和分析你的阅读情况。\n\nGithub提供WebHock功能，方便的让我们监控仓库的各类事件，从而触发某个自定义的功能，而这些功能我们已经放到了WebTask上面了。\n\n![create_webhock](https://s1.ax1x.com/2018/01/14/ptjXPH.png)\n\n这里你需要改的就是*Payload URL*，它是你在执行[上传到webtask](#上传到webtask)后得到的一个URL，其余的可以参考上图。\n\n\n\n## 其他功能示例\n\n### 在Instapaper做笔记\n\n```javascript\n  app.post('/reading-note', (req, res) => {\n    const { GITHUB_ACCESS_TOKEN } = req.webtaskContext.secrets\n\n    const title = req.query.title\n    const note = req.body.note\n    const highlightedText = req.body.highlightedText\n    console.info('[BEGIN]', { title, note, highlightedText })\n\n    let keyword = encodeURIComponent(title.replace(/\\s/g, '+'))\n    console.info('[KEYWORD]', keyword)\n\n    fetch(`https://api.github.com/search/issues?q=${keyword}%20repo:xuexiaoao/reading%20is:open`)\n      .then(response => response.json())\n      .then(data => {\n        console.info('[RESULT]', data)\n        if (data.total_count > 0) {\n          data.items.forEach(({ url, html_url }) =>\n            fetch(`${url}/comments?access_token=${GITHUB_ACCESS_TOKEN}`, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ body: `> ${highlightedText} <br/><br/> > ${note}` }),\n            })\n              .then(() => console.info(`[END] added comment successful! ${html_url}`))\n              .catch(err => res.json('error', { error: err })))\n          res.json({ message: 'Added comment into issue successful!' })\n        }\n        res.json({ error: 'Not Found!' })\n      })\n      .catch(err => res.json('error', { error: err }))\n  })\n```\n\n### Instapaper归档文章\n\n```javascript\n  app.get('/reading', (req, res) => {\n    const { GITHUB_ACCESS_TOKEN } = req.webtaskContext.secrets\n\n    console.info('[BEGIN]', req.query)\n    const title = req.query.title\n\n    let keyword = encodeURIComponent(title.replace(/\\s/g, '+'))\n    console.info('[KEYWORD]', keyword)\n\n    fetch(`https://api.github.com/search/issues?q=${keyword}%20repo:xuexiaoao/reading`)\n      .then(response => response.json())\n      .then(data => {\n        console.info('[RESULT]', data)\n        if (data.total_count > 0) {\n          data.items.forEach(({ url, html_url }) =>\n            fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n              method: 'PATCH',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ state: 'closed' }),\n            })\n              .then(() => console.info(`[END] issue closed successful! ${html_url}`))\n              .catch(err => res.json('error', { error: err })))\n          res.json({ message: 'Closed issue successful!' })\n        } else {\n          console.info('[RESULT]', data)\n\n          fetch(`https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues?access_token=${GITHUB_ACCESS_TOKEN}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title }),\n          })\n            .then(response => response.json())\n            .then(({ url, html_url }) => {\n              console.info(`[END] issue created successful! ${html_url}`)\n              fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ state: 'closed' }),\n              })\n                .then(() => console.info(`[END] issue closed successful! ${html_url}`))\n                .catch(err => res.json('error', { error: err }))\n            })\n            .catch(err => res.json('error', { error: err }))\n        }\n        res.json({ error: 'Finished achieve reading item!' })\n      })\n      .catch(err => res.json('error', { error: err }))\n  })\n```\n\n## 总结\n\n至此，一个自动化的阅读追踪系统已经搭建完成，现在我们就可以查看每天乃至每周的阅读情况了，你只需要定期的查看阅读效果，就可以对自己的阅读计划进行调整和变更。\n\n当然还有一些问题需要处理，比如对文章进行分类以使这套系统更有参考性，是否需要把在Instapaper中的笔记保存到自己的知识库中。\n\n## 参考资料\n\n* [Serverless 实战：打造个人阅读追踪系统](https://blog.jimmylv.info/2017-06-30-serverless-in-action-build-personal-reading-statistics-system/)\n* [我也来打造一个个人阅读追踪系统](https://juejin.im/post/59d975b6f265da065f04d8ff)","source":"_posts/create-personal-reading-tracking-system.md","raw":"---\ntitle: 打造个人阅读追踪系统\ndate: 2018-01-13 21:03:34\ncategories: \"生产力\"\ntop: true\n---\n\n> 偶然看到[<<我也来打造一个个人阅读追踪系统>>](https://juejin.im/post/59d975b6f265da065f04d8ff)，觉得这个想法非常不错。于是利用工作外的时间，经过半个月的折腾，初步搭成了一个自动化的个人阅读追踪系统。在这个系统搭成后，才发现Read it Later = Read Never离自己好近。\n\n## 工具\n\n包括但不仅仅局限于下面的工具，这里我使用*Instapaper*作为稍后阅读的工具，*IFTTT*作为连接*Instapaper*和*Cloud*的中枢，而*WebTask*作为我的云端处理工具，负责真正请求各类API。\n\n* [Github](https://github.com/)\n* [Zenhub](https://www.zenhub.com/)\n* [Instapaper](https://www.instapaper.com)\n* [IFTTT](https://ifttt.com)\n* [WebTask](https://webtask.io)\n\n## 工作流程\n\n在工作和生活中，我们经常会把文章保存到各种渠道中，比如印象笔记、Instapaper、Pocket等等，而这时，文章分散到各处，不利于我们了解和统计自己的阅读情况。这时是否可以在文章存档到各处后，自动在GItHub中创建一个Issues，而日后对文章的评论和圈点也会体现在Issues中，而且还有一个可视化的工具，详尽的展示了这一段时间内你的阅读情况，从而可以达到展示和督促的作用。\n\n![工作流程](https://s1.ax1x.com/2018/01/14/pYyosf.jpg)\n\n## 初始化WebTask\n\nwebTask作为*Serverless*架构的服务提供者，可以很方便的让我们在云端执行各类任务，在本文中，它的主要作用就是请求GitHub的API，以实现各类功能，比如给某个Issues添加评论、关闭某个Issues......\n\n### 安装命令行工具\n\n```js\nnpm install -g wt-cli\nwt init <YOUR-EMAIL>\n```\n\n### 创建项目\n\n新建一个node工程并添加index.js文件，补充如下代码：\n\n```javascript\nconst Express = require('express')\nconst Webtask = require('webtask-tools')\nconst bodyParser = require('body-parser')\nconst app = Express()\n\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(bodyParser.json())\n\nrequire('./routes/reading')(app)\n\nmodule.exports = Webtask.fromExpress(app)\n```\n\n创建/routes/reading.js文件，这里以在仓库创建Issues为例，完整代码可参考[xuexiaoao/demo.serverless-mern](https://github.com/xuexiaoao/demo.serverless-mern)\n\n```javascript\nrequire('es6-promise').polyfill()\nrequire('isomorphic-fetch')\n\nconst REPO_OWNER = 'xuexiaoao'\nconst REPO_NAME = 'reading'\nconst REPO_ID = 107835589\n\nmodule.exports = (app) => {\n  app.post('/reading', (req, res) => {\n      const { GITHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN_V4 } = req.webtaskContext.secrets\n      const { action, issue } = JSON.parse(req.body.payload)\n      const { url, html_url, number } = issue\n\n      console.info(`[BEGIN] issue updated with action: ${action}`)\n\n      if (action === 'opened') {\n        fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n          method: 'PATCH',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ milestone: 1, }),\n        }).then(\n          () => console.info(`[END] set milestone successful! ${html_url}`),\n          (e) => res.json(e),\n        )\n      } else if (action === 'milestoned') {\n        fetch(`https://api.zenhub.io/p1/repositories/${REPO_ID}/issues/${number}/estimate?access_token=${ZENHUB_ACCESS_TOKEN}`, {\n          method: 'PUT',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ estimate: 1 }),\n        }).then(\n          () => console.info(`[END] Set estimate successful! ${html_url}`),\n          (e) => console.error(`[END] Failed to set estimate! ${html_url}`, e),\n        )\n        fetch(`https://api.zenhub.io/v4/reports/release/59ec29a2bedf0a4d94322b26/items/issues?access_token=${ZENHUB_ACCESS_TOKEN_V4}`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          body: `add_issues%5B0%5D%5Bissue_number%5D=${number}&add_issues%5B0%5D%5Brepo_id%5D=${REPO_ID}`,\n        }).then(\n          () => console.info(`[END] set release successful! ${html_url}`),\n          (e) => console.error(`[END] Failed to set release! ${html_url}`, e),\n        )\n      }\n\n      res.json({ message: 'issue updated!' })\n    },\n  )\n}\n```\n\n这里有几个地方需要注意:\n\n* REPO_OWNER：这是你的github名字\n* REPO_NAME：这是你的仓库名称，之后所有的Issues都会创建到这里\n* REPO_ID：这个id可以通过github api获得:https://api.github.com/users/${REPO_OWNER}\n* GITHUB_ACCESS_TOKEN：这个没什么好说的就是在github上新建一个Personal access tokens\n* ZENHUB_ACCESS_TOKEN：这个是在zenhub新建一个token\n* ZENHUB_ACCESS_TOKEN_V4：这个官方api没有说明，但是可以打开zenhub对应仓库的浏览器开发者工具，任意找一个是 [api.zenhub.io](http://disq.us/url?url=http%3A%2F%2Fapi.zenhub.io%3AFORqzzRjWezjzHYTAiHvtcMGeAQ&cuid=3228622) 的请求，在 Request Headers中找到 x-authentication-token 对应的值就是这个 token 了\n\n### 上传到webtask\n\n这里需要使用上面准备的token，然后执行命令即可。由于使用webtask的上下文绑定工具*webtask-tools*，它会对一些敏感信息，比如我们的token进行加密，所以不必担心token泄漏的问题。\n\n```shell\nwt create index --bundle --secret GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN=$ZENHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN_V4=$ZENHUB_ACCESS_TOKEN_V4\n```\n\n## 使用IFTTT自动化处理\n\n那如何保证一有文章存入*Instapaper*中，就会新建一个Issues呢，这里就需要IFTTT这个神器了，这里不对IFTTT做详细介绍，如果有机会，可以另开一篇文章，专门介绍IFTTT。\n\n得益于 IFTTT 非常丰富的第三方服务，IFTTT 可以直接创建 Instapaper 与 GitHub Issue 相集成的 Applet：[If new item saved, then create a new issue - IFTTT](https://ifttt.com/applets/54307045d-if-new-item-saved-then-create-a-new-issue)，就可以在当 Instapaper 新增文章的时候，自动在 GitHub 所指定的仓库 [xuexiaoao/reading](https://github.com/xuexiaoao/reading/issues) 中创建一个新的 Issue 并添加相应的标题、链接以及描述等相关信息\n\n这里给出*把文章保存到Instapaper后，自动在仓库创建Issues的例子*，其他的操作都可以类似处理，如果有疑问，可以在本文留言。\n\n<img src='https://s1.ax1x.com/2018/01/14/ptXYtJ.png' width=\"30%\" height=\"30%\" >\n\n<img src='https://s1.ax1x.com/2018/01/14/ptONsf.png' width=\"30%\" height=\"30%\" >\n\n## 集成ZenHub\n\n现在仅仅会自动新建Issues，而我们还需要把Issues添加到Milestone中，就可以利用Zenhub的图表功能，可视化的查看和分析你的阅读情况。\n\nGithub提供WebHock功能，方便的让我们监控仓库的各类事件，从而触发某个自定义的功能，而这些功能我们已经放到了WebTask上面了。\n\n![create_webhock](https://s1.ax1x.com/2018/01/14/ptjXPH.png)\n\n这里你需要改的就是*Payload URL*，它是你在执行[上传到webtask](#上传到webtask)后得到的一个URL，其余的可以参考上图。\n\n\n\n## 其他功能示例\n\n### 在Instapaper做笔记\n\n```javascript\n  app.post('/reading-note', (req, res) => {\n    const { GITHUB_ACCESS_TOKEN } = req.webtaskContext.secrets\n\n    const title = req.query.title\n    const note = req.body.note\n    const highlightedText = req.body.highlightedText\n    console.info('[BEGIN]', { title, note, highlightedText })\n\n    let keyword = encodeURIComponent(title.replace(/\\s/g, '+'))\n    console.info('[KEYWORD]', keyword)\n\n    fetch(`https://api.github.com/search/issues?q=${keyword}%20repo:xuexiaoao/reading%20is:open`)\n      .then(response => response.json())\n      .then(data => {\n        console.info('[RESULT]', data)\n        if (data.total_count > 0) {\n          data.items.forEach(({ url, html_url }) =>\n            fetch(`${url}/comments?access_token=${GITHUB_ACCESS_TOKEN}`, {\n              method: 'POST',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ body: `> ${highlightedText} <br/><br/> > ${note}` }),\n            })\n              .then(() => console.info(`[END] added comment successful! ${html_url}`))\n              .catch(err => res.json('error', { error: err })))\n          res.json({ message: 'Added comment into issue successful!' })\n        }\n        res.json({ error: 'Not Found!' })\n      })\n      .catch(err => res.json('error', { error: err }))\n  })\n```\n\n### Instapaper归档文章\n\n```javascript\n  app.get('/reading', (req, res) => {\n    const { GITHUB_ACCESS_TOKEN } = req.webtaskContext.secrets\n\n    console.info('[BEGIN]', req.query)\n    const title = req.query.title\n\n    let keyword = encodeURIComponent(title.replace(/\\s/g, '+'))\n    console.info('[KEYWORD]', keyword)\n\n    fetch(`https://api.github.com/search/issues?q=${keyword}%20repo:xuexiaoao/reading`)\n      .then(response => response.json())\n      .then(data => {\n        console.info('[RESULT]', data)\n        if (data.total_count > 0) {\n          data.items.forEach(({ url, html_url }) =>\n            fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n              method: 'PATCH',\n              headers: { 'Content-Type': 'application/json' },\n              body: JSON.stringify({ state: 'closed' }),\n            })\n              .then(() => console.info(`[END] issue closed successful! ${html_url}`))\n              .catch(err => res.json('error', { error: err })))\n          res.json({ message: 'Closed issue successful!' })\n        } else {\n          console.info('[RESULT]', data)\n\n          fetch(`https://api.github.com/repos/${REPO_OWNER}/${REPO_NAME}/issues?access_token=${GITHUB_ACCESS_TOKEN}`, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ title }),\n          })\n            .then(response => response.json())\n            .then(({ url, html_url }) => {\n              console.info(`[END] issue created successful! ${html_url}`)\n              fetch(`${url}?access_token=${GITHUB_ACCESS_TOKEN}`, {\n                method: 'PATCH',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ state: 'closed' }),\n              })\n                .then(() => console.info(`[END] issue closed successful! ${html_url}`))\n                .catch(err => res.json('error', { error: err }))\n            })\n            .catch(err => res.json('error', { error: err }))\n        }\n        res.json({ error: 'Finished achieve reading item!' })\n      })\n      .catch(err => res.json('error', { error: err }))\n  })\n```\n\n## 总结\n\n至此，一个自动化的阅读追踪系统已经搭建完成，现在我们就可以查看每天乃至每周的阅读情况了，你只需要定期的查看阅读效果，就可以对自己的阅读计划进行调整和变更。\n\n当然还有一些问题需要处理，比如对文章进行分类以使这套系统更有参考性，是否需要把在Instapaper中的笔记保存到自己的知识库中。\n\n## 参考资料\n\n* [Serverless 实战：打造个人阅读追踪系统](https://blog.jimmylv.info/2017-06-30-serverless-in-action-build-personal-reading-statistics-system/)\n* [我也来打造一个个人阅读追踪系统](https://juejin.im/post/59d975b6f265da065f04d8ff)","slug":"create-personal-reading-tracking-system","published":1,"updated":"2018-01-21T15:47:52.316Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd4odl9s0004qswmxkj7rys5","content":"<blockquote>\n<p>偶然看到<a href=\"https://juejin.im/post/59d975b6f265da065f04d8ff\" target=\"_blank\" rel=\"noopener\">&lt;&lt;我也来打造一个个人阅读追踪系统&gt;&gt;</a>，觉得这个想法非常不错。于是利用工作外的时间，经过半个月的折腾，初步搭成了一个自动化的个人阅读追踪系统。在这个系统搭成后，才发现Read it Later = Read Never离自己好近。</p>\n</blockquote>\n<h2 id=\"工具\"><a class=\"header-anchor\" href=\"#工具\"></a>工具</h2>\n<p>包括但不仅仅局限于下面的工具，这里我使用<em>Instapaper</em>作为稍后阅读的工具，<em>IFTTT</em>作为连接<em>Instapaper</em>和<em>Cloud</em>的中枢，而<em>WebTask</em>作为我的云端处理工具，负责真正请求各类API。</p>\n<ul>\n<li><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li><a href=\"https://www.zenhub.com/\" target=\"_blank\" rel=\"noopener\">Zenhub</a></li>\n<li><a href=\"https://www.instapaper.com\" target=\"_blank\" rel=\"noopener\">Instapaper</a></li>\n<li><a href=\"https://ifttt.com\" target=\"_blank\" rel=\"noopener\">IFTTT</a></li>\n<li><a href=\"https://webtask.io\" target=\"_blank\" rel=\"noopener\">WebTask</a></li>\n</ul>\n<h2 id=\"工作流程\"><a class=\"header-anchor\" href=\"#工作流程\"></a>工作流程</h2>\n<p>在工作和生活中，我们经常会把文章保存到各种渠道中，比如印象笔记、Instapaper、Pocket等等，而这时，文章分散到各处，不利于我们了解和统计自己的阅读情况。这时是否可以在文章存档到各处后，自动在GItHub中创建一个Issues，而日后对文章的评论和圈点也会体现在Issues中，而且还有一个可视化的工具，详尽的展示了这一段时间内你的阅读情况，从而可以达到展示和督促的作用。</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/14/pYyosf.jpg\" alt=\"工作流程\"></p>\n<h2 id=\"初始化webtask\"><a class=\"header-anchor\" href=\"#初始化webtask\"></a>初始化WebTask</h2>\n<p>webTask作为<em>Serverless</em>架构的服务提供者，可以很方便的让我们在云端执行各类任务，在本文中，它的主要作用就是请求GitHub的API，以实现各类功能，比如给某个Issues添加评论、关闭某个Issues…</p>\n<h3 id=\"安装命令行工具\"><a class=\"header-anchor\" href=\"#安装命令行工具\"></a>安装命令行工具</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g wt-cli</span><br><span class=\"line\">wt init &lt;YOUR-EMAIL&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建项目\"><a class=\"header-anchor\" href=\"#创建项目\"></a>创建项目</h3>\n<p>新建一个node工程并添加index.js文件，补充如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> Webtask = <span class=\"built_in\">require</span>(<span class=\"string\">'webtask-tools'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = Express()</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\">app.use(bodyParser.json())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./routes/reading'</span>)(app)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Webtask.fromExpress(app)</span><br></pre></td></tr></table></figure>\n<p>创建/routes/reading.js文件，这里以在仓库创建Issues为例，完整代码可参考<a href=\"https://github.com/xuexiaoao/demo.serverless-mern\" target=\"_blank\" rel=\"noopener\">xuexiaoao/demo.serverless-mern</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'es6-promise'</span>).polyfill()</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'isomorphic-fetch'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_OWNER = <span class=\"string\">'xuexiaoao'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_NAME = <span class=\"string\">'reading'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_ID = <span class=\"number\">107835589</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">app</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  app.post(<span class=\"string\">'/reading'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN_V4 &#125; = req.webtaskContext.secrets</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; action, issue &#125; = <span class=\"built_in\">JSON</span>.parse(req.body.payload)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; url, html_url, number &#125; = issue</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">`[BEGIN] issue updated with action: <span class=\"subst\">$&#123;action&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (action === <span class=\"string\">'opened'</span>) &#123;</span><br><span class=\"line\">        fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">milestone</span>: <span class=\"number\">1</span>, &#125;),</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] set milestone successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; res.json(e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (action === <span class=\"string\">'milestoned'</span>) &#123;</span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.zenhub.io/p1/repositories/<span class=\"subst\">$&#123;REPO_ID&#125;</span>/issues/<span class=\"subst\">$&#123;number&#125;</span>/estimate?access_token=<span class=\"subst\">$&#123;ZENHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'PUT'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">estimate</span>: <span class=\"number\">1</span> &#125;),</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] Set estimate successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; <span class=\"built_in\">console</span>.error(<span class=\"string\">`[END] Failed to set estimate! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>, e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.zenhub.io/v4/reports/release/59ec29a2bedf0a4d94322b26/items/issues?access_token=<span class=\"subst\">$&#123;ZENHUB_ACCESS_TOKEN_V4&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"string\">`add_issues%5B0%5D%5Bissue_number%5D=<span class=\"subst\">$&#123;number&#125;</span>&amp;add_issues%5B0%5D%5Brepo_id%5D=<span class=\"subst\">$&#123;REPO_ID&#125;</span>`</span>,</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] set release successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; <span class=\"built_in\">console</span>.error(<span class=\"string\">`[END] Failed to set release! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>, e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'issue updated!'</span> &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里有几个地方需要注意:</p>\n<ul>\n<li>REPO_OWNER：这是你的github名字</li>\n<li>REPO_NAME：这是你的仓库名称，之后所有的Issues都会创建到这里</li>\n<li>REPO_ID：这个id可以通过github api获得:<a href=\"https://api.github.com/users/$%7BREPO_OWNER%7D\" target=\"_blank\" rel=\"noopener\">https://api.github.com/users/${REPO_OWNER}</a></li>\n<li>GITHUB_ACCESS_TOKEN：这个没什么好说的就是在github上新建一个Personal access tokens</li>\n<li>ZENHUB_ACCESS_TOKEN：这个是在zenhub新建一个token</li>\n<li>ZENHUB_ACCESS_TOKEN_V4：这个官方api没有说明，但是可以打开zenhub对应仓库的浏览器开发者工具，任意找一个是 <a href=\"http://disq.us/url?url=http%3A%2F%2Fapi.zenhub.io%3AFORqzzRjWezjzHYTAiHvtcMGeAQ&amp;cuid=3228622\" target=\"_blank\" rel=\"noopener\">api.zenhub.io</a> 的请求，在 Request Headers中找到 x-authentication-token 对应的值就是这个 token 了</li>\n</ul>\n<h3 id=\"上传到webtask\"><a class=\"header-anchor\" href=\"#上传到webtask\"></a>上传到webtask</h3>\n<p>这里需要使用上面准备的token，然后执行命令即可。由于使用webtask的上下文绑定工具<em>webtask-tools</em>，它会对一些敏感信息，比如我们的token进行加密，所以不必担心token泄漏的问题。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wt create index --bundle --secret GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN=$ZENHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN_V4=$ZENHUB_ACCESS_TOKEN_V4</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用ifttt自动化处理\"><a class=\"header-anchor\" href=\"#使用ifttt自动化处理\"></a>使用IFTTT自动化处理</h2>\n<p>那如何保证一有文章存入<em>Instapaper</em>中，就会新建一个Issues呢，这里就需要IFTTT这个神器了，这里不对IFTTT做详细介绍，如果有机会，可以另开一篇文章，专门介绍IFTTT。</p>\n<p>得益于 IFTTT 非常丰富的第三方服务，IFTTT 可以直接创建 Instapaper 与 GitHub Issue 相集成的 Applet：<a href=\"https://ifttt.com/applets/54307045d-if-new-item-saved-then-create-a-new-issue\" target=\"_blank\" rel=\"noopener\">If new item saved, then create a new issue - IFTTT</a>，就可以在当 Instapaper 新增文章的时候，自动在 GitHub 所指定的仓库 <a href=\"https://github.com/xuexiaoao/reading/issues\" target=\"_blank\" rel=\"noopener\">xuexiaoao/reading</a> 中创建一个新的 Issue 并添加相应的标题、链接以及描述等相关信息</p>\n<p>这里给出<em>把文章保存到Instapaper后，自动在仓库创建Issues的例子</em>，其他的操作都可以类似处理，如果有疑问，可以在本文留言。</p>\n<img src=\"https://s1.ax1x.com/2018/01/14/ptXYtJ.png\" width=\"30%\" height=\"30%\">\n<img src=\"https://s1.ax1x.com/2018/01/14/ptONsf.png\" width=\"30%\" height=\"30%\">\n<h2 id=\"集成zenhub\"><a class=\"header-anchor\" href=\"#集成zenhub\"></a>集成ZenHub</h2>\n<p>现在仅仅会自动新建Issues，而我们还需要把Issues添加到Milestone中，就可以利用Zenhub的图表功能，可视化的查看和分析你的阅读情况。</p>\n<p>Github提供WebHock功能，方便的让我们监控仓库的各类事件，从而触发某个自定义的功能，而这些功能我们已经放到了WebTask上面了。</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/14/ptjXPH.png\" alt=\"create_webhock\"></p>\n<p>这里你需要改的就是<em>Payload URL</em>，它是你在执行<a href=\"#%E4%B8%8A%E4%BC%A0%E5%88%B0webtask\">上传到webtask</a>后得到的一个URL，其余的可以参考上图。</p>\n<h2 id=\"其他功能示例\"><a class=\"header-anchor\" href=\"#其他功能示例\"></a>其他功能示例</h2>\n<h3 id=\"在instapaper做笔记\"><a class=\"header-anchor\" href=\"#在instapaper做笔记\"></a>在Instapaper做笔记</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.post(<span class=\"string\">'/reading-note'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN &#125; = req.webtaskContext.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = req.query.title</span><br><span class=\"line\">  <span class=\"keyword\">const</span> note = req.body.note</span><br><span class=\"line\">  <span class=\"keyword\">const</span> highlightedText = req.body.highlightedText</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[BEGIN]'</span>, &#123; title, note, highlightedText &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> keyword = <span class=\"built_in\">encodeURIComponent</span>(title.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">'+'</span>))</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[KEYWORD]'</span>, keyword)</span><br><span class=\"line\"></span><br><span class=\"line\">  fetch(<span class=\"string\">`https://api.github.com/search/issues?q=<span class=\"subst\">$&#123;keyword&#125;</span>%20repo:xuexiaoao/reading%20is:open`</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.total_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data.items.forEach(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span></span><br><span class=\"line\">          fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>/comments?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">            method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">            headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">            body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">body</span>: <span class=\"string\">`&gt; <span class=\"subst\">$&#123;highlightedText&#125;</span> &lt;br/&gt;&lt;br/&gt; &gt; <span class=\"subst\">$&#123;note&#125;</span>`</span> &#125;),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">            .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] added comment successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">            .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;)))</span><br><span class=\"line\">        res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'Added comment into issue successful!'</span> &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">error</span>: <span class=\"string\">'Not Found!'</span> &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"instapaper归档文章\"><a class=\"header-anchor\" href=\"#instapaper归档文章\"></a>Instapaper归档文章</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/reading'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN &#125; = req.webtaskContext.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[BEGIN]'</span>, req.query)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = req.query.title</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> keyword = <span class=\"built_in\">encodeURIComponent</span>(title.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">'+'</span>))</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[KEYWORD]'</span>, keyword)</span><br><span class=\"line\"></span><br><span class=\"line\">  fetch(<span class=\"string\">`https://api.github.com/search/issues?q=<span class=\"subst\">$&#123;keyword&#125;</span>%20repo:xuexiaoao/reading`</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.total_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data.items.forEach(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span></span><br><span class=\"line\">          fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">            method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">            headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">            body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">state</span>: <span class=\"string\">'closed'</span> &#125;),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">            .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue closed successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">            .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;)))</span><br><span class=\"line\">        res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'Closed issue successful!'</span> &#125;)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\"></span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;REPO_OWNER&#125;</span>/<span class=\"subst\">$&#123;REPO_NAME&#125;</span>/issues?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; title &#125;),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">          .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">          .then(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue created successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>)</span><br><span class=\"line\">            fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">              method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">              headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">              body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">state</span>: <span class=\"string\">'closed'</span> &#125;),</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">              .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue closed successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">              .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">error</span>: <span class=\"string\">'Finished achieve reading item!'</span> &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\"></a>总结</h2>\n<p>至此，一个自动化的阅读追踪系统已经搭建完成，现在我们就可以查看每天乃至每周的阅读情况了，你只需要定期的查看阅读效果，就可以对自己的阅读计划进行调整和变更。</p>\n<p>当然还有一些问题需要处理，比如对文章进行分类以使这套系统更有参考性，是否需要把在Instapaper中的笔记保存到自己的知识库中。</p>\n<h2 id=\"参考资料\"><a class=\"header-anchor\" href=\"#参考资料\"></a>参考资料</h2>\n<ul>\n<li><a href=\"https://blog.jimmylv.info/2017-06-30-serverless-in-action-build-personal-reading-statistics-system/\" target=\"_blank\" rel=\"noopener\">Serverless 实战：打造个人阅读追踪系统</a></li>\n<li><a href=\"https://juejin.im/post/59d975b6f265da065f04d8ff\" target=\"_blank\" rel=\"noopener\">我也来打造一个个人阅读追踪系统</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>偶然看到<a href=\"https://juejin.im/post/59d975b6f265da065f04d8ff\" target=\"_blank\" rel=\"noopener\">&lt;&lt;我也来打造一个个人阅读追踪系统&gt;&gt;</a>，觉得这个想法非常不错。于是利用工作外的时间，经过半个月的折腾，初步搭成了一个自动化的个人阅读追踪系统。在这个系统搭成后，才发现Read it Later = Read Never离自己好近。</p>\n</blockquote>\n<h2 id=\"工具\"><a class=\"header-anchor\" href=\"#工具\"></a>工具</h2>\n<p>包括但不仅仅局限于下面的工具，这里我使用<em>Instapaper</em>作为稍后阅读的工具，<em>IFTTT</em>作为连接<em>Instapaper</em>和<em>Cloud</em>的中枢，而<em>WebTask</em>作为我的云端处理工具，负责真正请求各类API。</p>\n<ul>\n<li><a href=\"https://github.com/\" target=\"_blank\" rel=\"noopener\">Github</a></li>\n<li><a href=\"https://www.zenhub.com/\" target=\"_blank\" rel=\"noopener\">Zenhub</a></li>\n<li><a href=\"https://www.instapaper.com\" target=\"_blank\" rel=\"noopener\">Instapaper</a></li>\n<li><a href=\"https://ifttt.com\" target=\"_blank\" rel=\"noopener\">IFTTT</a></li>\n<li><a href=\"https://webtask.io\" target=\"_blank\" rel=\"noopener\">WebTask</a></li>\n</ul>\n<h2 id=\"工作流程\"><a class=\"header-anchor\" href=\"#工作流程\"></a>工作流程</h2>\n<p>在工作和生活中，我们经常会把文章保存到各种渠道中，比如印象笔记、Instapaper、Pocket等等，而这时，文章分散到各处，不利于我们了解和统计自己的阅读情况。这时是否可以在文章存档到各处后，自动在GItHub中创建一个Issues，而日后对文章的评论和圈点也会体现在Issues中，而且还有一个可视化的工具，详尽的展示了这一段时间内你的阅读情况，从而可以达到展示和督促的作用。</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/14/pYyosf.jpg\" alt=\"工作流程\"></p>\n<h2 id=\"初始化webtask\"><a class=\"header-anchor\" href=\"#初始化webtask\"></a>初始化WebTask</h2>\n<p>webTask作为<em>Serverless</em>架构的服务提供者，可以很方便的让我们在云端执行各类任务，在本文中，它的主要作用就是请求GitHub的API，以实现各类功能，比如给某个Issues添加评论、关闭某个Issues…</p>\n<h3 id=\"安装命令行工具\"><a class=\"header-anchor\" href=\"#安装命令行工具\"></a>安装命令行工具</h3>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g wt-cli</span><br><span class=\"line\">wt init &lt;YOUR-EMAIL&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"创建项目\"><a class=\"header-anchor\" href=\"#创建项目\"></a>创建项目</h3>\n<p>新建一个node工程并添加index.js文件，补充如下代码：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> Express = <span class=\"built_in\">require</span>(<span class=\"string\">'express'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> Webtask = <span class=\"built_in\">require</span>(<span class=\"string\">'webtask-tools'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">'body-parser'</span>)</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = Express()</span><br><span class=\"line\"></span><br><span class=\"line\">app.use(bodyParser.urlencoded(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">false</span> &#125;))</span><br><span class=\"line\">app.use(bodyParser.json())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'./routes/reading'</span>)(app)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = Webtask.fromExpress(app)</span><br></pre></td></tr></table></figure>\n<p>创建/routes/reading.js文件，这里以在仓库创建Issues为例，完整代码可参考<a href=\"https://github.com/xuexiaoao/demo.serverless-mern\" target=\"_blank\" rel=\"noopener\">xuexiaoao/demo.serverless-mern</a></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'es6-promise'</span>).polyfill()</span><br><span class=\"line\"><span class=\"built_in\">require</span>(<span class=\"string\">'isomorphic-fetch'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_OWNER = <span class=\"string\">'xuexiaoao'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_NAME = <span class=\"string\">'reading'</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> REPO_ID = <span class=\"number\">107835589</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">module</span>.exports = <span class=\"function\">(<span class=\"params\">app</span>) =&gt;</span> &#123;</span><br><span class=\"line\">  app.post(<span class=\"string\">'/reading'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN, ZENHUB_ACCESS_TOKEN_V4 &#125; = req.webtaskContext.secrets</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; action, issue &#125; = <span class=\"built_in\">JSON</span>.parse(req.body.payload)</span><br><span class=\"line\">      <span class=\"keyword\">const</span> &#123; url, html_url, number &#125; = issue</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">`[BEGIN] issue updated with action: <span class=\"subst\">$&#123;action&#125;</span>`</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> (action === <span class=\"string\">'opened'</span>) &#123;</span><br><span class=\"line\">        fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">milestone</span>: <span class=\"number\">1</span>, &#125;),</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] set milestone successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; res.json(e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (action === <span class=\"string\">'milestoned'</span>) &#123;</span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.zenhub.io/p1/repositories/<span class=\"subst\">$&#123;REPO_ID&#125;</span>/issues/<span class=\"subst\">$&#123;number&#125;</span>/estimate?access_token=<span class=\"subst\">$&#123;ZENHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'PUT'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">estimate</span>: <span class=\"number\">1</span> &#125;),</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] Set estimate successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; <span class=\"built_in\">console</span>.error(<span class=\"string\">`[END] Failed to set estimate! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>, e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.zenhub.io/v4/reports/release/59ec29a2bedf0a4d94322b26/items/issues?access_token=<span class=\"subst\">$&#123;ZENHUB_ACCESS_TOKEN_V4&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/x-www-form-urlencoded'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"string\">`add_issues%5B0%5D%5Bissue_number%5D=<span class=\"subst\">$&#123;number&#125;</span>&amp;add_issues%5B0%5D%5Brepo_id%5D=<span class=\"subst\">$&#123;REPO_ID&#125;</span>`</span>,</span><br><span class=\"line\">        &#125;).then(</span><br><span class=\"line\">          () =&gt; <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] set release successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>),</span><br><span class=\"line\">          (e) =&gt; <span class=\"built_in\">console</span>.error(<span class=\"string\">`[END] Failed to set release! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>, e),</span><br><span class=\"line\">        )</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'issue updated!'</span> &#125;)</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  )</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里有几个地方需要注意:</p>\n<ul>\n<li>REPO_OWNER：这是你的github名字</li>\n<li>REPO_NAME：这是你的仓库名称，之后所有的Issues都会创建到这里</li>\n<li>REPO_ID：这个id可以通过github api获得:<a href=\"https://api.github.com/users/$%7BREPO_OWNER%7D\" target=\"_blank\" rel=\"noopener\">https://api.github.com/users/${REPO_OWNER}</a></li>\n<li>GITHUB_ACCESS_TOKEN：这个没什么好说的就是在github上新建一个Personal access tokens</li>\n<li>ZENHUB_ACCESS_TOKEN：这个是在zenhub新建一个token</li>\n<li>ZENHUB_ACCESS_TOKEN_V4：这个官方api没有说明，但是可以打开zenhub对应仓库的浏览器开发者工具，任意找一个是 <a href=\"http://disq.us/url?url=http%3A%2F%2Fapi.zenhub.io%3AFORqzzRjWezjzHYTAiHvtcMGeAQ&amp;cuid=3228622\" target=\"_blank\" rel=\"noopener\">api.zenhub.io</a> 的请求，在 Request Headers中找到 x-authentication-token 对应的值就是这个 token 了</li>\n</ul>\n<h3 id=\"上传到webtask\"><a class=\"header-anchor\" href=\"#上传到webtask\"></a>上传到webtask</h3>\n<p>这里需要使用上面准备的token，然后执行命令即可。由于使用webtask的上下文绑定工具<em>webtask-tools</em>，它会对一些敏感信息，比如我们的token进行加密，所以不必担心token泄漏的问题。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wt create index --bundle --secret GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN=$ZENHUB_ACCESS_TOKEN --secret ZENHUB_ACCESS_TOKEN_V4=$ZENHUB_ACCESS_TOKEN_V4</span><br></pre></td></tr></table></figure>\n<h2 id=\"使用ifttt自动化处理\"><a class=\"header-anchor\" href=\"#使用ifttt自动化处理\"></a>使用IFTTT自动化处理</h2>\n<p>那如何保证一有文章存入<em>Instapaper</em>中，就会新建一个Issues呢，这里就需要IFTTT这个神器了，这里不对IFTTT做详细介绍，如果有机会，可以另开一篇文章，专门介绍IFTTT。</p>\n<p>得益于 IFTTT 非常丰富的第三方服务，IFTTT 可以直接创建 Instapaper 与 GitHub Issue 相集成的 Applet：<a href=\"https://ifttt.com/applets/54307045d-if-new-item-saved-then-create-a-new-issue\" target=\"_blank\" rel=\"noopener\">If new item saved, then create a new issue - IFTTT</a>，就可以在当 Instapaper 新增文章的时候，自动在 GitHub 所指定的仓库 <a href=\"https://github.com/xuexiaoao/reading/issues\" target=\"_blank\" rel=\"noopener\">xuexiaoao/reading</a> 中创建一个新的 Issue 并添加相应的标题、链接以及描述等相关信息</p>\n<p>这里给出<em>把文章保存到Instapaper后，自动在仓库创建Issues的例子</em>，其他的操作都可以类似处理，如果有疑问，可以在本文留言。</p>\n<img src=\"https://s1.ax1x.com/2018/01/14/ptXYtJ.png\" width=\"30%\" height=\"30%\">\n<img src=\"https://s1.ax1x.com/2018/01/14/ptONsf.png\" width=\"30%\" height=\"30%\">\n<h2 id=\"集成zenhub\"><a class=\"header-anchor\" href=\"#集成zenhub\"></a>集成ZenHub</h2>\n<p>现在仅仅会自动新建Issues，而我们还需要把Issues添加到Milestone中，就可以利用Zenhub的图表功能，可视化的查看和分析你的阅读情况。</p>\n<p>Github提供WebHock功能，方便的让我们监控仓库的各类事件，从而触发某个自定义的功能，而这些功能我们已经放到了WebTask上面了。</p>\n<p><img src=\"https://s1.ax1x.com/2018/01/14/ptjXPH.png\" alt=\"create_webhock\"></p>\n<p>这里你需要改的就是<em>Payload URL</em>，它是你在执行<a href=\"#%E4%B8%8A%E4%BC%A0%E5%88%B0webtask\">上传到webtask</a>后得到的一个URL，其余的可以参考上图。</p>\n<h2 id=\"其他功能示例\"><a class=\"header-anchor\" href=\"#其他功能示例\"></a>其他功能示例</h2>\n<h3 id=\"在instapaper做笔记\"><a class=\"header-anchor\" href=\"#在instapaper做笔记\"></a>在Instapaper做笔记</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.post(<span class=\"string\">'/reading-note'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN &#125; = req.webtaskContext.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = req.query.title</span><br><span class=\"line\">  <span class=\"keyword\">const</span> note = req.body.note</span><br><span class=\"line\">  <span class=\"keyword\">const</span> highlightedText = req.body.highlightedText</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[BEGIN]'</span>, &#123; title, note, highlightedText &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> keyword = <span class=\"built_in\">encodeURIComponent</span>(title.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">'+'</span>))</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[KEYWORD]'</span>, keyword)</span><br><span class=\"line\"></span><br><span class=\"line\">  fetch(<span class=\"string\">`https://api.github.com/search/issues?q=<span class=\"subst\">$&#123;keyword&#125;</span>%20repo:xuexiaoao/reading%20is:open`</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.total_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data.items.forEach(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span></span><br><span class=\"line\">          fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>/comments?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">            method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">            headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">            body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">body</span>: <span class=\"string\">`&gt; <span class=\"subst\">$&#123;highlightedText&#125;</span> &lt;br/&gt;&lt;br/&gt; &gt; <span class=\"subst\">$&#123;note&#125;</span>`</span> &#125;),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">            .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] added comment successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">            .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;)))</span><br><span class=\"line\">        res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'Added comment into issue successful!'</span> &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">error</span>: <span class=\"string\">'Not Found!'</span> &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h3 id=\"instapaper归档文章\"><a class=\"header-anchor\" href=\"#instapaper归档文章\"></a>Instapaper归档文章</h3>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.get(<span class=\"string\">'/reading'</span>, (req, res) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> &#123; GITHUB_ACCESS_TOKEN &#125; = req.webtaskContext.secrets</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[BEGIN]'</span>, req.query)</span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = req.query.title</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">let</span> keyword = <span class=\"built_in\">encodeURIComponent</span>(title.replace(<span class=\"regexp\">/\\s/g</span>, <span class=\"string\">'+'</span>))</span><br><span class=\"line\">  <span class=\"built_in\">console</span>.info(<span class=\"string\">'[KEYWORD]'</span>, keyword)</span><br><span class=\"line\"></span><br><span class=\"line\">  fetch(<span class=\"string\">`https://api.github.com/search/issues?q=<span class=\"subst\">$&#123;keyword&#125;</span>%20repo:xuexiaoao/reading`</span>)</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">    .then(<span class=\"function\"><span class=\"params\">data</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (data.total_count &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        data.items.forEach(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span></span><br><span class=\"line\">          fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">            method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">            headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">            body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">state</span>: <span class=\"string\">'closed'</span> &#125;),</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">            .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue closed successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">            .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;)))</span><br><span class=\"line\">        res.json(&#123; <span class=\"attr\">message</span>: <span class=\"string\">'Closed issue successful!'</span> &#125;)</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">console</span>.info(<span class=\"string\">'[RESULT]'</span>, data)</span><br><span class=\"line\"></span><br><span class=\"line\">        fetch(<span class=\"string\">`https://api.github.com/repos/<span class=\"subst\">$&#123;REPO_OWNER&#125;</span>/<span class=\"subst\">$&#123;REPO_NAME&#125;</span>/issues?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">          method: <span class=\"string\">'POST'</span>,</span><br><span class=\"line\">          headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">          body: <span class=\"built_in\">JSON</span>.stringify(&#123; title &#125;),</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">          .then(<span class=\"function\"><span class=\"params\">response</span> =&gt;</span> response.json())</span><br><span class=\"line\">          .then(<span class=\"function\">(<span class=\"params\">&#123; url, html_url &#125;</span>) =&gt;</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue created successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>)</span><br><span class=\"line\">            fetch(<span class=\"string\">`<span class=\"subst\">$&#123;url&#125;</span>?access_token=<span class=\"subst\">$&#123;GITHUB_ACCESS_TOKEN&#125;</span>`</span>, &#123;</span><br><span class=\"line\">              method: <span class=\"string\">'PATCH'</span>,</span><br><span class=\"line\">              headers: &#123; <span class=\"string\">'Content-Type'</span>: <span class=\"string\">'application/json'</span> &#125;,</span><br><span class=\"line\">              body: <span class=\"built_in\">JSON</span>.stringify(&#123; <span class=\"attr\">state</span>: <span class=\"string\">'closed'</span> &#125;),</span><br><span class=\"line\">            &#125;)</span><br><span class=\"line\">              .then(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> <span class=\"built_in\">console</span>.info(<span class=\"string\">`[END] issue closed successful! <span class=\"subst\">$&#123;html_url&#125;</span>`</span>))</span><br><span class=\"line\">              .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">          &#125;)</span><br><span class=\"line\">          .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      res.json(&#123; <span class=\"attr\">error</span>: <span class=\"string\">'Finished achieve reading item!'</span> &#125;)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .catch(<span class=\"function\"><span class=\"params\">err</span> =&gt;</span> res.json(<span class=\"string\">'error'</span>, &#123; <span class=\"attr\">error</span>: err &#125;))</span><br><span class=\"line\">&#125;)</span><br></pre></td></tr></table></figure>\n<h2 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\"></a>总结</h2>\n<p>至此，一个自动化的阅读追踪系统已经搭建完成，现在我们就可以查看每天乃至每周的阅读情况了，你只需要定期的查看阅读效果，就可以对自己的阅读计划进行调整和变更。</p>\n<p>当然还有一些问题需要处理，比如对文章进行分类以使这套系统更有参考性，是否需要把在Instapaper中的笔记保存到自己的知识库中。</p>\n<h2 id=\"参考资料\"><a class=\"header-anchor\" href=\"#参考资料\"></a>参考资料</h2>\n<ul>\n<li><a href=\"https://blog.jimmylv.info/2017-06-30-serverless-in-action-build-personal-reading-statistics-system/\" target=\"_blank\" rel=\"noopener\">Serverless 实战：打造个人阅读追踪系统</a></li>\n<li><a href=\"https://juejin.im/post/59d975b6f265da065f04d8ff\" target=\"_blank\" rel=\"noopener\">我也来打造一个个人阅读追踪系统</a></li>\n</ul>\n"},{"title":"《单核工作法图解》--读书笔记","date":"2018-01-28T15:27:23.000Z","_content":"\n\n> 每个人都有非常多的想法，但是最后要么只是想一想，要么三分钟热度，只有极少数人才会坚持下来，这些人无一例外的对时间管理很是精通。本文主要记录《单核工作法图解》一书的感悟，作者是Staffan Nöteberg，曾写过《番茄工作法图解》这本畅销书。\n\n![githb_url](https://camo.githubusercontent.com/c7591c24e3cf1d248eca89a0571091ab96dd8dcc/68747470733a2f2f696d67332e646f7562616e696f2e636f6d2f6c7069632f7332393630323735342e6a7067)\n\n## 什么是单核工作法\n\n顾名思义，就是一段时间内只专注于一件事，它有五项基本概念\n\n* 快捷清单，最多存放当前最重要5项任务的地方，如果需要添加任务，只能删除原有任务\n* 单核时段，这段时间只用来专心处理快捷清单上的某一项任务，不用在意任务是否顺利完成，只关心是否专注\n* 全景闹钟，作为单核时段结束的提醒，应该设置为一天中的48个时间点：0：00、0：30、01：00、01：30......，需要注意的是单核时段不少于25分钟，可以根据自己实际情况进行调整\n* 全景时段，查看快捷清单中的所有代办任务，并且思考“拉金问题”：此时此刻，我的时间最好用来做什么？\n* 颠倒优先级，应该避免把紧急任务排在重要任务的前面，只有完成重要任务，我们的长期目标才会实现\n\n既然我们准备去实践*单核工作法*，那就有必要了解为什么这样去做，这里列出它的五大原理\n\n* 已经开始的任务会无条件的占据我们每天的所思所想，直到被完成或删除。\n* 多任务切换不仅会拖慢速度，而且注定会耗尽大脑能量\n* 我们应该负责区分优先级的责任，选出*现在*头号重要的事来做\n* 我们必须在休息、睡眠、身体、健康这些事上投资，这样才能在日常生活中稳步前进\n* 我们的方法必须适应环境；要根据自己最新的个人经验，一点一点调整。没有放之四海皆准的方法\n\n使用单核工作法，首先需要做的就是确认优先级，美国总统艾森豪威尔曾说过\"紧急的问题不重要，重要的问题从来不紧急\"，我们应该避免把紧急任务安排在重要任务之前；确认优先级后，就可以从代办列表里选出最重要的一项任务进入单核时段，在这一段时间内，专注于现在，不念过往，不畏将来，同时需要设置一个全景闹钟，设置方法可参考上文；在闹铃响后，进入全景时段，此时段需要重新排列所有任务的优先级，思考：此时此刻，我的时间最好用来做什么？以此循环往复，生产力提高指日可待！\n\n## 削减代办任务\n\n> 必须按照重要程度而不是紧急程度排列优先级\n\n事情是在不断变化的，优先级也随之改变，为了能够处理突发的重要任务，优先级的排序必须具有灵活性，所以快捷清单中的任务不宜过多。那么如何从浩如烟海的任务中寻找最重要的呢，这就需要注意以下几点：\n\n* 忙碌谬论是一种错误的观点，人们总是相信手上的事情越多，人就越有价值。相反，空闲会促使我们完成工作\n* 勇敢的说“不”，口是心非，害人害己，如果说了“是”，就一定要做到，所以要保持足够的透明度\n* 勇敢的停下你的工作，转向更重要的任务。事情是在不断变化的，当下的投入未必会有更好的产出\n* 必要的**除草**行为，每周一次\n\n我们使用快捷清单作为代办列表，那么必然会有一个地方存放我们现在不能做，但将来会获得高优先处理的任务，这就是**集草器清单**，除草行为就是针对这份清单的。在除草时，要遵守80/20法则，丢弃那些内心深知永远不会完成的任务，只留下最重要的5项任务。\n\n## 现在专注一件事\n\n单核时段要求我们必须专注于一件事，可是在这个纷杂的世界中，应该如何做才能保持专注呢？\n\n### 杜绝多任务切换\n\n一个人不可能同时处理多项任务，如果频繁切换任务，只会造成精力的损耗，因此**减少任务切换可以提高生产力**。\n\n### 戒绝通知&志愿者小时\n\n当我们进入了单核时段，正专注于任务时，如果被手机、电脑或者同事打断了思路，再想要回到之前的状态，恐怕需要花费很长的时间，因此我们必须要把“推送”变成“手动收取”，对于同事的到来，可以选择一个固定时间作为**志愿者小时**专门用来处理他们的问题。\n\n### 过度时间\n\n早晨起床到出门上班、离开办公室前的几分钟，都可以被称为**过度时间**，我们可以利用早晨的时间来规划当天的计划，下班前的时间罗列出明天要做什么，这样可以利用**服务生效应**激活我们的潜意识，帮助解决问题。\n\n### 培养专注力\n\n安静的环境可以提高生产力，在如今的办公场所，很少会有安静的地方，因此可以利用平静缓和的轻音乐来提高我们的专注。除此之外，还可以利用核对单的**一做一勾**、慢节奏的工具记笔记、思考的时候拿支笔、培养观察力、做比较、怀着自发的目标等方式来培养我们的专注。\n\n## 永不拖延\n\n> 从想法到行动，中间隔着一个拖延症的距离。\n\n已经决定了要做什么但是不去做（这不就是说的我嘛 :cold_sweat: ），这就是在浪费时间，拖延总是把我们置于焦头烂额的境地。要避免拖延，最主要的问题是如何开始。\n\n### 时间不一致\n\n人们总是会认为未来有大把时间，因此总会把任务推后，可是最后常常还没有开始工作。所以杜绝拖延需要做到的第一件事情就是：现在就做最重要的事，对紧急程度不作考虑。同时我们对于可支配时间的利用也尽可能的采用单核时段完成，杜绝浪费时间的现象。\n\n### 拖延的征兆\n\n过度规划、外界干扰、没有动力等等一系列的现象，都是拖延症的征兆，要战胜拖延，可以在你不想开始的任务上，开始一项小小的行动，只要开始做这件事，就会感觉好多了。\n\n### 具体方法\n\n* 时刻保持快捷清单最多只有5项任务，过长的清单会动摇透入的决心\n* 杜绝规划过度，最好的方法是一边做一边找方法，得到别人的反馈后，再重新调整会有更好的效果\n* 利用服务生效应，每天下班前思考明天最重要的任务，这会让明早的开工更容易\n* 随时清理没有用的物品，不管他们多么有趣，多么有用\n* 视觉化一项大任务，画出所需效果的思维导图\n* 增强工作中的自主、专精和目的\n* 列出晨间流程，每天重复使用\n* 采用手边管理法，把我们喜欢、在乎、总觉得会用到的东西放得远远的\n* 把大任务拆解成小任务来做\n\n## 循序渐进\n\n> 完成任务的时间会永远比你期待的更长。                -------侯世达定律\n>\n> 工作是会自动膨胀的，给它分配多少时间，它就占满多少时间。                 ------帕金森定律\n\n根据侯世达定律和帕金森定律可知，我们不可能100%的预估任务完成的时间。因为一切都在改变，曾经看起来正确的那件事也在改变，这就促使我们必须要随时改变任务的优先级，小步前进，拥抱变化。\n\n[永不拖延](#永不拖延)中提到了任务分解，在这里，他可以帮助我们小步前进，一边做，一边获得新的知识，进而让新知识发挥优势。分解任务后，需要思考**拉金问题**：此时此刻我的时间最好用来做什么？根据重要程度选出最重要的任务，待到任务完成后，把结果分享给利益关系人，得到他们的反馈，根据反馈，重新调整快捷清单中的任务。\n\n通过循序渐进的方式，我们可以获得时间和空间来调整航向，因此不要轻易的承诺结果，而是承诺你的行为，事先制定好详细的计划，只会抑制你的创造力。\n\n## 简化协作\n\n在现代职场中，很少需要单打独斗的工作，因此与其他人顺利合作是至关重要的。与他人合作难免会有沟通、时间、透明度的问题，所以需要注意以下几点：\n\n* 富足心态，寻求双赢，对自己的人生负责\n* 有效聆听，彻底清楚同事想要表达的信息\n* 不必关心谁做了什么、如何走到现在这一步的，应该着眼于下一步该如何走好\n* 有选择的参加必要的会议\n* 一图胜千言，在事情难以说清楚的情况下，可以使用韦恩图、流程图等图表工具\n* 尽可能的实现更高层次的沟通，比如面对面\n\n职场中的每个人都是一个独立的个体，我们必须要认识到他们的强项和短处，如果恰巧和某位同事不合拍的话，可以利用**本杰明.富兰克林效应**来消除他们的负面情绪，比如可以去请教他们所擅长领域的知识，等到下次就会对我们产生更强的同理心。\n\n## 给创意充电\n\n身体是革命的本钱，想要高效工作，就有必要照顾好自己的身体，照顾身体可以从以下几个方面入手：\n\n* 面对长期任务，强制自己短暂的休息\n* 经常运动，可站立工作台能提高生产力\n* 合理膳食，保持稳定的血糖水平，少吃高热量食品\n* 杜绝加班现象\n* 遇到久攻不下的问题，可以尝试散步获取寻求同事的意见\n* 保持每天足够的睡眠\n\n大脑在进化的过程中学到一件事：如果没有人帮忙，就得自己解决所有问题。但如果和认识的人在一起，就会相互依赖于合作互利的想法，从而放松自己，节省大脑的能量消耗。因此，我们在休息的时候可以给朋友打电话，等到工作时，就可以用上节约的脑力了。\n\n习惯是培养的，那些生产力高效的人也不是生来就是这样的，因此我们要有意识的培养某些高效的习惯，但是确认目标后，却发现无法坚持，难道要放弃吗？不！与其责备自己缺乏自律，倒不如把步伐迈小点。\n\n## 总结\n\n整本书讲述了如何高效的使用**单核工作法**，作为一个一直想要学习时间管理的新人来说，还是有不小难度的，比如文中提到的拖延症就是一大问题！但是也提到分解为小任务后开始尝试去做，就会感觉好很多的解决方案。作为2018年阅读的第一本书，是想要利用从书中学到的方法，实践到工作和学习当中，使自己成为一个生产力高效的人！\n\n\n\n","source":"_posts/monotasking-after-reading.md","raw":"---\ntitle: 《单核工作法图解》--读书笔记\ncategories: 读书笔记\ndate: 2018-01-28 23:27:23\ntags:\n---\n\n\n> 每个人都有非常多的想法，但是最后要么只是想一想，要么三分钟热度，只有极少数人才会坚持下来，这些人无一例外的对时间管理很是精通。本文主要记录《单核工作法图解》一书的感悟，作者是Staffan Nöteberg，曾写过《番茄工作法图解》这本畅销书。\n\n![githb_url](https://camo.githubusercontent.com/c7591c24e3cf1d248eca89a0571091ab96dd8dcc/68747470733a2f2f696d67332e646f7562616e696f2e636f6d2f6c7069632f7332393630323735342e6a7067)\n\n## 什么是单核工作法\n\n顾名思义，就是一段时间内只专注于一件事，它有五项基本概念\n\n* 快捷清单，最多存放当前最重要5项任务的地方，如果需要添加任务，只能删除原有任务\n* 单核时段，这段时间只用来专心处理快捷清单上的某一项任务，不用在意任务是否顺利完成，只关心是否专注\n* 全景闹钟，作为单核时段结束的提醒，应该设置为一天中的48个时间点：0：00、0：30、01：00、01：30......，需要注意的是单核时段不少于25分钟，可以根据自己实际情况进行调整\n* 全景时段，查看快捷清单中的所有代办任务，并且思考“拉金问题”：此时此刻，我的时间最好用来做什么？\n* 颠倒优先级，应该避免把紧急任务排在重要任务的前面，只有完成重要任务，我们的长期目标才会实现\n\n既然我们准备去实践*单核工作法*，那就有必要了解为什么这样去做，这里列出它的五大原理\n\n* 已经开始的任务会无条件的占据我们每天的所思所想，直到被完成或删除。\n* 多任务切换不仅会拖慢速度，而且注定会耗尽大脑能量\n* 我们应该负责区分优先级的责任，选出*现在*头号重要的事来做\n* 我们必须在休息、睡眠、身体、健康这些事上投资，这样才能在日常生活中稳步前进\n* 我们的方法必须适应环境；要根据自己最新的个人经验，一点一点调整。没有放之四海皆准的方法\n\n使用单核工作法，首先需要做的就是确认优先级，美国总统艾森豪威尔曾说过\"紧急的问题不重要，重要的问题从来不紧急\"，我们应该避免把紧急任务安排在重要任务之前；确认优先级后，就可以从代办列表里选出最重要的一项任务进入单核时段，在这一段时间内，专注于现在，不念过往，不畏将来，同时需要设置一个全景闹钟，设置方法可参考上文；在闹铃响后，进入全景时段，此时段需要重新排列所有任务的优先级，思考：此时此刻，我的时间最好用来做什么？以此循环往复，生产力提高指日可待！\n\n## 削减代办任务\n\n> 必须按照重要程度而不是紧急程度排列优先级\n\n事情是在不断变化的，优先级也随之改变，为了能够处理突发的重要任务，优先级的排序必须具有灵活性，所以快捷清单中的任务不宜过多。那么如何从浩如烟海的任务中寻找最重要的呢，这就需要注意以下几点：\n\n* 忙碌谬论是一种错误的观点，人们总是相信手上的事情越多，人就越有价值。相反，空闲会促使我们完成工作\n* 勇敢的说“不”，口是心非，害人害己，如果说了“是”，就一定要做到，所以要保持足够的透明度\n* 勇敢的停下你的工作，转向更重要的任务。事情是在不断变化的，当下的投入未必会有更好的产出\n* 必要的**除草**行为，每周一次\n\n我们使用快捷清单作为代办列表，那么必然会有一个地方存放我们现在不能做，但将来会获得高优先处理的任务，这就是**集草器清单**，除草行为就是针对这份清单的。在除草时，要遵守80/20法则，丢弃那些内心深知永远不会完成的任务，只留下最重要的5项任务。\n\n## 现在专注一件事\n\n单核时段要求我们必须专注于一件事，可是在这个纷杂的世界中，应该如何做才能保持专注呢？\n\n### 杜绝多任务切换\n\n一个人不可能同时处理多项任务，如果频繁切换任务，只会造成精力的损耗，因此**减少任务切换可以提高生产力**。\n\n### 戒绝通知&志愿者小时\n\n当我们进入了单核时段，正专注于任务时，如果被手机、电脑或者同事打断了思路，再想要回到之前的状态，恐怕需要花费很长的时间，因此我们必须要把“推送”变成“手动收取”，对于同事的到来，可以选择一个固定时间作为**志愿者小时**专门用来处理他们的问题。\n\n### 过度时间\n\n早晨起床到出门上班、离开办公室前的几分钟，都可以被称为**过度时间**，我们可以利用早晨的时间来规划当天的计划，下班前的时间罗列出明天要做什么，这样可以利用**服务生效应**激活我们的潜意识，帮助解决问题。\n\n### 培养专注力\n\n安静的环境可以提高生产力，在如今的办公场所，很少会有安静的地方，因此可以利用平静缓和的轻音乐来提高我们的专注。除此之外，还可以利用核对单的**一做一勾**、慢节奏的工具记笔记、思考的时候拿支笔、培养观察力、做比较、怀着自发的目标等方式来培养我们的专注。\n\n## 永不拖延\n\n> 从想法到行动，中间隔着一个拖延症的距离。\n\n已经决定了要做什么但是不去做（这不就是说的我嘛 :cold_sweat: ），这就是在浪费时间，拖延总是把我们置于焦头烂额的境地。要避免拖延，最主要的问题是如何开始。\n\n### 时间不一致\n\n人们总是会认为未来有大把时间，因此总会把任务推后，可是最后常常还没有开始工作。所以杜绝拖延需要做到的第一件事情就是：现在就做最重要的事，对紧急程度不作考虑。同时我们对于可支配时间的利用也尽可能的采用单核时段完成，杜绝浪费时间的现象。\n\n### 拖延的征兆\n\n过度规划、外界干扰、没有动力等等一系列的现象，都是拖延症的征兆，要战胜拖延，可以在你不想开始的任务上，开始一项小小的行动，只要开始做这件事，就会感觉好多了。\n\n### 具体方法\n\n* 时刻保持快捷清单最多只有5项任务，过长的清单会动摇透入的决心\n* 杜绝规划过度，最好的方法是一边做一边找方法，得到别人的反馈后，再重新调整会有更好的效果\n* 利用服务生效应，每天下班前思考明天最重要的任务，这会让明早的开工更容易\n* 随时清理没有用的物品，不管他们多么有趣，多么有用\n* 视觉化一项大任务，画出所需效果的思维导图\n* 增强工作中的自主、专精和目的\n* 列出晨间流程，每天重复使用\n* 采用手边管理法，把我们喜欢、在乎、总觉得会用到的东西放得远远的\n* 把大任务拆解成小任务来做\n\n## 循序渐进\n\n> 完成任务的时间会永远比你期待的更长。                -------侯世达定律\n>\n> 工作是会自动膨胀的，给它分配多少时间，它就占满多少时间。                 ------帕金森定律\n\n根据侯世达定律和帕金森定律可知，我们不可能100%的预估任务完成的时间。因为一切都在改变，曾经看起来正确的那件事也在改变，这就促使我们必须要随时改变任务的优先级，小步前进，拥抱变化。\n\n[永不拖延](#永不拖延)中提到了任务分解，在这里，他可以帮助我们小步前进，一边做，一边获得新的知识，进而让新知识发挥优势。分解任务后，需要思考**拉金问题**：此时此刻我的时间最好用来做什么？根据重要程度选出最重要的任务，待到任务完成后，把结果分享给利益关系人，得到他们的反馈，根据反馈，重新调整快捷清单中的任务。\n\n通过循序渐进的方式，我们可以获得时间和空间来调整航向，因此不要轻易的承诺结果，而是承诺你的行为，事先制定好详细的计划，只会抑制你的创造力。\n\n## 简化协作\n\n在现代职场中，很少需要单打独斗的工作，因此与其他人顺利合作是至关重要的。与他人合作难免会有沟通、时间、透明度的问题，所以需要注意以下几点：\n\n* 富足心态，寻求双赢，对自己的人生负责\n* 有效聆听，彻底清楚同事想要表达的信息\n* 不必关心谁做了什么、如何走到现在这一步的，应该着眼于下一步该如何走好\n* 有选择的参加必要的会议\n* 一图胜千言，在事情难以说清楚的情况下，可以使用韦恩图、流程图等图表工具\n* 尽可能的实现更高层次的沟通，比如面对面\n\n职场中的每个人都是一个独立的个体，我们必须要认识到他们的强项和短处，如果恰巧和某位同事不合拍的话，可以利用**本杰明.富兰克林效应**来消除他们的负面情绪，比如可以去请教他们所擅长领域的知识，等到下次就会对我们产生更强的同理心。\n\n## 给创意充电\n\n身体是革命的本钱，想要高效工作，就有必要照顾好自己的身体，照顾身体可以从以下几个方面入手：\n\n* 面对长期任务，强制自己短暂的休息\n* 经常运动，可站立工作台能提高生产力\n* 合理膳食，保持稳定的血糖水平，少吃高热量食品\n* 杜绝加班现象\n* 遇到久攻不下的问题，可以尝试散步获取寻求同事的意见\n* 保持每天足够的睡眠\n\n大脑在进化的过程中学到一件事：如果没有人帮忙，就得自己解决所有问题。但如果和认识的人在一起，就会相互依赖于合作互利的想法，从而放松自己，节省大脑的能量消耗。因此，我们在休息的时候可以给朋友打电话，等到工作时，就可以用上节约的脑力了。\n\n习惯是培养的，那些生产力高效的人也不是生来就是这样的，因此我们要有意识的培养某些高效的习惯，但是确认目标后，却发现无法坚持，难道要放弃吗？不！与其责备自己缺乏自律，倒不如把步伐迈小点。\n\n## 总结\n\n整本书讲述了如何高效的使用**单核工作法**，作为一个一直想要学习时间管理的新人来说，还是有不小难度的，比如文中提到的拖延症就是一大问题！但是也提到分解为小任务后开始尝试去做，就会感觉好很多的解决方案。作为2018年阅读的第一本书，是想要利用从书中学到的方法，实践到工作和学习当中，使自己成为一个生产力高效的人！\n\n\n\n","slug":"monotasking-after-reading","published":1,"updated":"2018-01-28T15:27:23.540Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjd4odl9x0006qswmdr6rcc5l","content":"<blockquote>\n<p>每个人都有非常多的想法，但是最后要么只是想一想，要么三分钟热度，只有极少数人才会坚持下来，这些人无一例外的对时间管理很是精通。本文主要记录《单核工作法图解》一书的感悟，作者是Staffan Nöteberg，曾写过《番茄工作法图解》这本畅销书。</p>\n</blockquote>\n<p><img src=\"https://camo.githubusercontent.com/c7591c24e3cf1d248eca89a0571091ab96dd8dcc/68747470733a2f2f696d67332e646f7562616e696f2e636f6d2f6c7069632f7332393630323735342e6a7067\" alt=\"githb_url\"></p>\n<h2 id=\"什么是单核工作法\"><a class=\"header-anchor\" href=\"#什么是单核工作法\"></a>什么是单核工作法</h2>\n<p>顾名思义，就是一段时间内只专注于一件事，它有五项基本概念</p>\n<ul>\n<li>快捷清单，最多存放当前最重要5项任务的地方，如果需要添加任务，只能删除原有任务</li>\n<li>单核时段，这段时间只用来专心处理快捷清单上的某一项任务，不用在意任务是否顺利完成，只关心是否专注</li>\n<li>全景闹钟，作为单核时段结束的提醒，应该设置为一天中的48个时间点：0：00、0：30、01：00、01：30…，需要注意的是单核时段不少于25分钟，可以根据自己实际情况进行调整</li>\n<li>全景时段，查看快捷清单中的所有代办任务，并且思考“拉金问题”：此时此刻，我的时间最好用来做什么？</li>\n<li>颠倒优先级，应该避免把紧急任务排在重要任务的前面，只有完成重要任务，我们的长期目标才会实现</li>\n</ul>\n<p>既然我们准备去实践<em>单核工作法</em>，那就有必要了解为什么这样去做，这里列出它的五大原理</p>\n<ul>\n<li>已经开始的任务会无条件的占据我们每天的所思所想，直到被完成或删除。</li>\n<li>多任务切换不仅会拖慢速度，而且注定会耗尽大脑能量</li>\n<li>我们应该负责区分优先级的责任，选出<em>现在</em>头号重要的事来做</li>\n<li>我们必须在休息、睡眠、身体、健康这些事上投资，这样才能在日常生活中稳步前进</li>\n<li>我们的方法必须适应环境；要根据自己最新的个人经验，一点一点调整。没有放之四海皆准的方法</li>\n</ul>\n<p>使用单核工作法，首先需要做的就是确认优先级，美国总统艾森豪威尔曾说过&quot;紧急的问题不重要，重要的问题从来不紧急&quot;，我们应该避免把紧急任务安排在重要任务之前；确认优先级后，就可以从代办列表里选出最重要的一项任务进入单核时段，在这一段时间内，专注于现在，不念过往，不畏将来，同时需要设置一个全景闹钟，设置方法可参考上文；在闹铃响后，进入全景时段，此时段需要重新排列所有任务的优先级，思考：此时此刻，我的时间最好用来做什么？以此循环往复，生产力提高指日可待！</p>\n<h2 id=\"削减代办任务\"><a class=\"header-anchor\" href=\"#削减代办任务\"></a>削减代办任务</h2>\n<blockquote>\n<p>必须按照重要程度而不是紧急程度排列优先级</p>\n</blockquote>\n<p>事情是在不断变化的，优先级也随之改变，为了能够处理突发的重要任务，优先级的排序必须具有灵活性，所以快捷清单中的任务不宜过多。那么如何从浩如烟海的任务中寻找最重要的呢，这就需要注意以下几点：</p>\n<ul>\n<li>忙碌谬论是一种错误的观点，人们总是相信手上的事情越多，人就越有价值。相反，空闲会促使我们完成工作</li>\n<li>勇敢的说“不”，口是心非，害人害己，如果说了“是”，就一定要做到，所以要保持足够的透明度</li>\n<li>勇敢的停下你的工作，转向更重要的任务。事情是在不断变化的，当下的投入未必会有更好的产出</li>\n<li>必要的<strong>除草</strong>行为，每周一次</li>\n</ul>\n<p>我们使用快捷清单作为代办列表，那么必然会有一个地方存放我们现在不能做，但将来会获得高优先处理的任务，这就是<strong>集草器清单</strong>，除草行为就是针对这份清单的。在除草时，要遵守80/20法则，丢弃那些内心深知永远不会完成的任务，只留下最重要的5项任务。</p>\n<h2 id=\"现在专注一件事\"><a class=\"header-anchor\" href=\"#现在专注一件事\"></a>现在专注一件事</h2>\n<p>单核时段要求我们必须专注于一件事，可是在这个纷杂的世界中，应该如何做才能保持专注呢？</p>\n<h3 id=\"杜绝多任务切换\"><a class=\"header-anchor\" href=\"#杜绝多任务切换\"></a>杜绝多任务切换</h3>\n<p>一个人不可能同时处理多项任务，如果频繁切换任务，只会造成精力的损耗，因此<strong>减少任务切换可以提高生产力</strong>。</p>\n<h3 id=\"戒绝通知-志愿者小时\"><a class=\"header-anchor\" href=\"#戒绝通知-志愿者小时\"></a>戒绝通知&amp;志愿者小时</h3>\n<p>当我们进入了单核时段，正专注于任务时，如果被手机、电脑或者同事打断了思路，再想要回到之前的状态，恐怕需要花费很长的时间，因此我们必须要把“推送”变成“手动收取”，对于同事的到来，可以选择一个固定时间作为<strong>志愿者小时</strong>专门用来处理他们的问题。</p>\n<h3 id=\"过度时间\"><a class=\"header-anchor\" href=\"#过度时间\"></a>过度时间</h3>\n<p>早晨起床到出门上班、离开办公室前的几分钟，都可以被称为<strong>过度时间</strong>，我们可以利用早晨的时间来规划当天的计划，下班前的时间罗列出明天要做什么，这样可以利用<strong>服务生效应</strong>激活我们的潜意识，帮助解决问题。</p>\n<h3 id=\"培养专注力\"><a class=\"header-anchor\" href=\"#培养专注力\"></a>培养专注力</h3>\n<p>安静的环境可以提高生产力，在如今的办公场所，很少会有安静的地方，因此可以利用平静缓和的轻音乐来提高我们的专注。除此之外，还可以利用核对单的<strong>一做一勾</strong>、慢节奏的工具记笔记、思考的时候拿支笔、培养观察力、做比较、怀着自发的目标等方式来培养我们的专注。</p>\n<h2 id=\"永不拖延\"><a class=\"header-anchor\" href=\"#永不拖延\"></a>永不拖延</h2>\n<blockquote>\n<p>从想法到行动，中间隔着一个拖延症的距离。</p>\n</blockquote>\n<p>已经决定了要做什么但是不去做（这不就是说的我嘛 😰 ），这就是在浪费时间，拖延总是把我们置于焦头烂额的境地。要避免拖延，最主要的问题是如何开始。</p>\n<h3 id=\"时间不一致\"><a class=\"header-anchor\" href=\"#时间不一致\"></a>时间不一致</h3>\n<p>人们总是会认为未来有大把时间，因此总会把任务推后，可是最后常常还没有开始工作。所以杜绝拖延需要做到的第一件事情就是：现在就做最重要的事，对紧急程度不作考虑。同时我们对于可支配时间的利用也尽可能的采用单核时段完成，杜绝浪费时间的现象。</p>\n<h3 id=\"拖延的征兆\"><a class=\"header-anchor\" href=\"#拖延的征兆\"></a>拖延的征兆</h3>\n<p>过度规划、外界干扰、没有动力等等一系列的现象，都是拖延症的征兆，要战胜拖延，可以在你不想开始的任务上，开始一项小小的行动，只要开始做这件事，就会感觉好多了。</p>\n<h3 id=\"具体方法\"><a class=\"header-anchor\" href=\"#具体方法\"></a>具体方法</h3>\n<ul>\n<li>时刻保持快捷清单最多只有5项任务，过长的清单会动摇透入的决心</li>\n<li>杜绝规划过度，最好的方法是一边做一边找方法，得到别人的反馈后，再重新调整会有更好的效果</li>\n<li>利用服务生效应，每天下班前思考明天最重要的任务，这会让明早的开工更容易</li>\n<li>随时清理没有用的物品，不管他们多么有趣，多么有用</li>\n<li>视觉化一项大任务，画出所需效果的思维导图</li>\n<li>增强工作中的自主、专精和目的</li>\n<li>列出晨间流程，每天重复使用</li>\n<li>采用手边管理法，把我们喜欢、在乎、总觉得会用到的东西放得远远的</li>\n<li>把大任务拆解成小任务来做</li>\n</ul>\n<h2 id=\"循序渐进\"><a class=\"header-anchor\" href=\"#循序渐进\"></a>循序渐进</h2>\n<blockquote>\n<p>完成任务的时间会永远比你期待的更长。                -------侯世达定律</p>\n<p>工作是会自动膨胀的，给它分配多少时间，它就占满多少时间。                 ------帕金森定律</p>\n</blockquote>\n<p>根据侯世达定律和帕金森定律可知，我们不可能100%的预估任务完成的时间。因为一切都在改变，曾经看起来正确的那件事也在改变，这就促使我们必须要随时改变任务的优先级，小步前进，拥抱变化。</p>\n<p><a href=\"#%E6%B0%B8%E4%B8%8D%E6%8B%96%E5%BB%B6\">永不拖延</a>中提到了任务分解，在这里，他可以帮助我们小步前进，一边做，一边获得新的知识，进而让新知识发挥优势。分解任务后，需要思考<strong>拉金问题</strong>：此时此刻我的时间最好用来做什么？根据重要程度选出最重要的任务，待到任务完成后，把结果分享给利益关系人，得到他们的反馈，根据反馈，重新调整快捷清单中的任务。</p>\n<p>通过循序渐进的方式，我们可以获得时间和空间来调整航向，因此不要轻易的承诺结果，而是承诺你的行为，事先制定好详细的计划，只会抑制你的创造力。</p>\n<h2 id=\"简化协作\"><a class=\"header-anchor\" href=\"#简化协作\"></a>简化协作</h2>\n<p>在现代职场中，很少需要单打独斗的工作，因此与其他人顺利合作是至关重要的。与他人合作难免会有沟通、时间、透明度的问题，所以需要注意以下几点：</p>\n<ul>\n<li>富足心态，寻求双赢，对自己的人生负责</li>\n<li>有效聆听，彻底清楚同事想要表达的信息</li>\n<li>不必关心谁做了什么、如何走到现在这一步的，应该着眼于下一步该如何走好</li>\n<li>有选择的参加必要的会议</li>\n<li>一图胜千言，在事情难以说清楚的情况下，可以使用韦恩图、流程图等图表工具</li>\n<li>尽可能的实现更高层次的沟通，比如面对面</li>\n</ul>\n<p>职场中的每个人都是一个独立的个体，我们必须要认识到他们的强项和短处，如果恰巧和某位同事不合拍的话，可以利用<strong>本杰明.富兰克林效应</strong>来消除他们的负面情绪，比如可以去请教他们所擅长领域的知识，等到下次就会对我们产生更强的同理心。</p>\n<h2 id=\"给创意充电\"><a class=\"header-anchor\" href=\"#给创意充电\"></a>给创意充电</h2>\n<p>身体是革命的本钱，想要高效工作，就有必要照顾好自己的身体，照顾身体可以从以下几个方面入手：</p>\n<ul>\n<li>面对长期任务，强制自己短暂的休息</li>\n<li>经常运动，可站立工作台能提高生产力</li>\n<li>合理膳食，保持稳定的血糖水平，少吃高热量食品</li>\n<li>杜绝加班现象</li>\n<li>遇到久攻不下的问题，可以尝试散步获取寻求同事的意见</li>\n<li>保持每天足够的睡眠</li>\n</ul>\n<p>大脑在进化的过程中学到一件事：如果没有人帮忙，就得自己解决所有问题。但如果和认识的人在一起，就会相互依赖于合作互利的想法，从而放松自己，节省大脑的能量消耗。因此，我们在休息的时候可以给朋友打电话，等到工作时，就可以用上节约的脑力了。</p>\n<p>习惯是培养的，那些生产力高效的人也不是生来就是这样的，因此我们要有意识的培养某些高效的习惯，但是确认目标后，却发现无法坚持，难道要放弃吗？不！与其责备自己缺乏自律，倒不如把步伐迈小点。</p>\n<h2 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\"></a>总结</h2>\n<p>整本书讲述了如何高效的使用<strong>单核工作法</strong>，作为一个一直想要学习时间管理的新人来说，还是有不小难度的，比如文中提到的拖延症就是一大问题！但是也提到分解为小任务后开始尝试去做，就会感觉好很多的解决方案。作为2018年阅读的第一本书，是想要利用从书中学到的方法，实践到工作和学习当中，使自己成为一个生产力高效的人！</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>每个人都有非常多的想法，但是最后要么只是想一想，要么三分钟热度，只有极少数人才会坚持下来，这些人无一例外的对时间管理很是精通。本文主要记录《单核工作法图解》一书的感悟，作者是Staffan Nöteberg，曾写过《番茄工作法图解》这本畅销书。</p>\n</blockquote>\n<p><img src=\"https://camo.githubusercontent.com/c7591c24e3cf1d248eca89a0571091ab96dd8dcc/68747470733a2f2f696d67332e646f7562616e696f2e636f6d2f6c7069632f7332393630323735342e6a7067\" alt=\"githb_url\"></p>\n<h2 id=\"什么是单核工作法\"><a class=\"header-anchor\" href=\"#什么是单核工作法\"></a>什么是单核工作法</h2>\n<p>顾名思义，就是一段时间内只专注于一件事，它有五项基本概念</p>\n<ul>\n<li>快捷清单，最多存放当前最重要5项任务的地方，如果需要添加任务，只能删除原有任务</li>\n<li>单核时段，这段时间只用来专心处理快捷清单上的某一项任务，不用在意任务是否顺利完成，只关心是否专注</li>\n<li>全景闹钟，作为单核时段结束的提醒，应该设置为一天中的48个时间点：0：00、0：30、01：00、01：30…，需要注意的是单核时段不少于25分钟，可以根据自己实际情况进行调整</li>\n<li>全景时段，查看快捷清单中的所有代办任务，并且思考“拉金问题”：此时此刻，我的时间最好用来做什么？</li>\n<li>颠倒优先级，应该避免把紧急任务排在重要任务的前面，只有完成重要任务，我们的长期目标才会实现</li>\n</ul>\n<p>既然我们准备去实践<em>单核工作法</em>，那就有必要了解为什么这样去做，这里列出它的五大原理</p>\n<ul>\n<li>已经开始的任务会无条件的占据我们每天的所思所想，直到被完成或删除。</li>\n<li>多任务切换不仅会拖慢速度，而且注定会耗尽大脑能量</li>\n<li>我们应该负责区分优先级的责任，选出<em>现在</em>头号重要的事来做</li>\n<li>我们必须在休息、睡眠、身体、健康这些事上投资，这样才能在日常生活中稳步前进</li>\n<li>我们的方法必须适应环境；要根据自己最新的个人经验，一点一点调整。没有放之四海皆准的方法</li>\n</ul>\n<p>使用单核工作法，首先需要做的就是确认优先级，美国总统艾森豪威尔曾说过&quot;紧急的问题不重要，重要的问题从来不紧急&quot;，我们应该避免把紧急任务安排在重要任务之前；确认优先级后，就可以从代办列表里选出最重要的一项任务进入单核时段，在这一段时间内，专注于现在，不念过往，不畏将来，同时需要设置一个全景闹钟，设置方法可参考上文；在闹铃响后，进入全景时段，此时段需要重新排列所有任务的优先级，思考：此时此刻，我的时间最好用来做什么？以此循环往复，生产力提高指日可待！</p>\n<h2 id=\"削减代办任务\"><a class=\"header-anchor\" href=\"#削减代办任务\"></a>削减代办任务</h2>\n<blockquote>\n<p>必须按照重要程度而不是紧急程度排列优先级</p>\n</blockquote>\n<p>事情是在不断变化的，优先级也随之改变，为了能够处理突发的重要任务，优先级的排序必须具有灵活性，所以快捷清单中的任务不宜过多。那么如何从浩如烟海的任务中寻找最重要的呢，这就需要注意以下几点：</p>\n<ul>\n<li>忙碌谬论是一种错误的观点，人们总是相信手上的事情越多，人就越有价值。相反，空闲会促使我们完成工作</li>\n<li>勇敢的说“不”，口是心非，害人害己，如果说了“是”，就一定要做到，所以要保持足够的透明度</li>\n<li>勇敢的停下你的工作，转向更重要的任务。事情是在不断变化的，当下的投入未必会有更好的产出</li>\n<li>必要的<strong>除草</strong>行为，每周一次</li>\n</ul>\n<p>我们使用快捷清单作为代办列表，那么必然会有一个地方存放我们现在不能做，但将来会获得高优先处理的任务，这就是<strong>集草器清单</strong>，除草行为就是针对这份清单的。在除草时，要遵守80/20法则，丢弃那些内心深知永远不会完成的任务，只留下最重要的5项任务。</p>\n<h2 id=\"现在专注一件事\"><a class=\"header-anchor\" href=\"#现在专注一件事\"></a>现在专注一件事</h2>\n<p>单核时段要求我们必须专注于一件事，可是在这个纷杂的世界中，应该如何做才能保持专注呢？</p>\n<h3 id=\"杜绝多任务切换\"><a class=\"header-anchor\" href=\"#杜绝多任务切换\"></a>杜绝多任务切换</h3>\n<p>一个人不可能同时处理多项任务，如果频繁切换任务，只会造成精力的损耗，因此<strong>减少任务切换可以提高生产力</strong>。</p>\n<h3 id=\"戒绝通知-志愿者小时\"><a class=\"header-anchor\" href=\"#戒绝通知-志愿者小时\"></a>戒绝通知&amp;志愿者小时</h3>\n<p>当我们进入了单核时段，正专注于任务时，如果被手机、电脑或者同事打断了思路，再想要回到之前的状态，恐怕需要花费很长的时间，因此我们必须要把“推送”变成“手动收取”，对于同事的到来，可以选择一个固定时间作为<strong>志愿者小时</strong>专门用来处理他们的问题。</p>\n<h3 id=\"过度时间\"><a class=\"header-anchor\" href=\"#过度时间\"></a>过度时间</h3>\n<p>早晨起床到出门上班、离开办公室前的几分钟，都可以被称为<strong>过度时间</strong>，我们可以利用早晨的时间来规划当天的计划，下班前的时间罗列出明天要做什么，这样可以利用<strong>服务生效应</strong>激活我们的潜意识，帮助解决问题。</p>\n<h3 id=\"培养专注力\"><a class=\"header-anchor\" href=\"#培养专注力\"></a>培养专注力</h3>\n<p>安静的环境可以提高生产力，在如今的办公场所，很少会有安静的地方，因此可以利用平静缓和的轻音乐来提高我们的专注。除此之外，还可以利用核对单的<strong>一做一勾</strong>、慢节奏的工具记笔记、思考的时候拿支笔、培养观察力、做比较、怀着自发的目标等方式来培养我们的专注。</p>\n<h2 id=\"永不拖延\"><a class=\"header-anchor\" href=\"#永不拖延\"></a>永不拖延</h2>\n<blockquote>\n<p>从想法到行动，中间隔着一个拖延症的距离。</p>\n</blockquote>\n<p>已经决定了要做什么但是不去做（这不就是说的我嘛 😰 ），这就是在浪费时间，拖延总是把我们置于焦头烂额的境地。要避免拖延，最主要的问题是如何开始。</p>\n<h3 id=\"时间不一致\"><a class=\"header-anchor\" href=\"#时间不一致\"></a>时间不一致</h3>\n<p>人们总是会认为未来有大把时间，因此总会把任务推后，可是最后常常还没有开始工作。所以杜绝拖延需要做到的第一件事情就是：现在就做最重要的事，对紧急程度不作考虑。同时我们对于可支配时间的利用也尽可能的采用单核时段完成，杜绝浪费时间的现象。</p>\n<h3 id=\"拖延的征兆\"><a class=\"header-anchor\" href=\"#拖延的征兆\"></a>拖延的征兆</h3>\n<p>过度规划、外界干扰、没有动力等等一系列的现象，都是拖延症的征兆，要战胜拖延，可以在你不想开始的任务上，开始一项小小的行动，只要开始做这件事，就会感觉好多了。</p>\n<h3 id=\"具体方法\"><a class=\"header-anchor\" href=\"#具体方法\"></a>具体方法</h3>\n<ul>\n<li>时刻保持快捷清单最多只有5项任务，过长的清单会动摇透入的决心</li>\n<li>杜绝规划过度，最好的方法是一边做一边找方法，得到别人的反馈后，再重新调整会有更好的效果</li>\n<li>利用服务生效应，每天下班前思考明天最重要的任务，这会让明早的开工更容易</li>\n<li>随时清理没有用的物品，不管他们多么有趣，多么有用</li>\n<li>视觉化一项大任务，画出所需效果的思维导图</li>\n<li>增强工作中的自主、专精和目的</li>\n<li>列出晨间流程，每天重复使用</li>\n<li>采用手边管理法，把我们喜欢、在乎、总觉得会用到的东西放得远远的</li>\n<li>把大任务拆解成小任务来做</li>\n</ul>\n<h2 id=\"循序渐进\"><a class=\"header-anchor\" href=\"#循序渐进\"></a>循序渐进</h2>\n<blockquote>\n<p>完成任务的时间会永远比你期待的更长。                -------侯世达定律</p>\n<p>工作是会自动膨胀的，给它分配多少时间，它就占满多少时间。                 ------帕金森定律</p>\n</blockquote>\n<p>根据侯世达定律和帕金森定律可知，我们不可能100%的预估任务完成的时间。因为一切都在改变，曾经看起来正确的那件事也在改变，这就促使我们必须要随时改变任务的优先级，小步前进，拥抱变化。</p>\n<p><a href=\"#%E6%B0%B8%E4%B8%8D%E6%8B%96%E5%BB%B6\">永不拖延</a>中提到了任务分解，在这里，他可以帮助我们小步前进，一边做，一边获得新的知识，进而让新知识发挥优势。分解任务后，需要思考<strong>拉金问题</strong>：此时此刻我的时间最好用来做什么？根据重要程度选出最重要的任务，待到任务完成后，把结果分享给利益关系人，得到他们的反馈，根据反馈，重新调整快捷清单中的任务。</p>\n<p>通过循序渐进的方式，我们可以获得时间和空间来调整航向，因此不要轻易的承诺结果，而是承诺你的行为，事先制定好详细的计划，只会抑制你的创造力。</p>\n<h2 id=\"简化协作\"><a class=\"header-anchor\" href=\"#简化协作\"></a>简化协作</h2>\n<p>在现代职场中，很少需要单打独斗的工作，因此与其他人顺利合作是至关重要的。与他人合作难免会有沟通、时间、透明度的问题，所以需要注意以下几点：</p>\n<ul>\n<li>富足心态，寻求双赢，对自己的人生负责</li>\n<li>有效聆听，彻底清楚同事想要表达的信息</li>\n<li>不必关心谁做了什么、如何走到现在这一步的，应该着眼于下一步该如何走好</li>\n<li>有选择的参加必要的会议</li>\n<li>一图胜千言，在事情难以说清楚的情况下，可以使用韦恩图、流程图等图表工具</li>\n<li>尽可能的实现更高层次的沟通，比如面对面</li>\n</ul>\n<p>职场中的每个人都是一个独立的个体，我们必须要认识到他们的强项和短处，如果恰巧和某位同事不合拍的话，可以利用<strong>本杰明.富兰克林效应</strong>来消除他们的负面情绪，比如可以去请教他们所擅长领域的知识，等到下次就会对我们产生更强的同理心。</p>\n<h2 id=\"给创意充电\"><a class=\"header-anchor\" href=\"#给创意充电\"></a>给创意充电</h2>\n<p>身体是革命的本钱，想要高效工作，就有必要照顾好自己的身体，照顾身体可以从以下几个方面入手：</p>\n<ul>\n<li>面对长期任务，强制自己短暂的休息</li>\n<li>经常运动，可站立工作台能提高生产力</li>\n<li>合理膳食，保持稳定的血糖水平，少吃高热量食品</li>\n<li>杜绝加班现象</li>\n<li>遇到久攻不下的问题，可以尝试散步获取寻求同事的意见</li>\n<li>保持每天足够的睡眠</li>\n</ul>\n<p>大脑在进化的过程中学到一件事：如果没有人帮忙，就得自己解决所有问题。但如果和认识的人在一起，就会相互依赖于合作互利的想法，从而放松自己，节省大脑的能量消耗。因此，我们在休息的时候可以给朋友打电话，等到工作时，就可以用上节约的脑力了。</p>\n<p>习惯是培养的，那些生产力高效的人也不是生来就是这样的，因此我们要有意识的培养某些高效的习惯，但是确认目标后，却发现无法坚持，难道要放弃吗？不！与其责备自己缺乏自律，倒不如把步伐迈小点。</p>\n<h2 id=\"总结\"><a class=\"header-anchor\" href=\"#总结\"></a>总结</h2>\n<p>整本书讲述了如何高效的使用<strong>单核工作法</strong>，作为一个一直想要学习时间管理的新人来说，还是有不小难度的，比如文中提到的拖延症就是一大问题！但是也提到分解为小任务后开始尝试去做，就会感觉好很多的解决方案。作为2018年阅读的第一本书，是想要利用从书中学到的方法，实践到工作和学习当中，使自己成为一个生产力高效的人！</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjd4odl9o0002qswmmx396m8c","category_id":"cjd4odl9u0005qswm2xy8m8ym","_id":"cjd4odla00008qswm7n0p3kap"},{"post_id":"cjd4odl9s0004qswmxkj7rys5","category_id":"cjd4odl9z0007qswmhlbukz1o","_id":"cjd4odla3000aqswmz0swts9n"},{"post_id":"cjd4odl9x0006qswmdr6rcc5l","category_id":"cjd4odla10009qswmd0al6r5n","_id":"cjd4odla3000bqswmgyasj7d0"}],"PostTag":[],"Tag":[]}}